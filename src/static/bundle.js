var require = function (file, cwd) {
    var resolved = require.resolve(file, cwd || '/');
    var mod = require.modules[resolved];
    if (!mod) throw new Error(
        'Failed to resolve module ' + file + ', tried ' + resolved
    );
    var res = mod._cached ? mod._cached : mod();
    return res;
}

require.paths = [];
require.modules = {};
require.extensions = [".js",".coffee"];

require._core = {
    'assert': true,
    'events': true,
    'fs': true,
    'path': true,
    'vm': true
};

require.resolve = (function () {
    return function (x, cwd) {
        if (!cwd) cwd = '/';
        
        if (require._core[x]) return x;
        var path = require.modules.path();
        cwd = path.resolve('/', cwd);
        var y = cwd || '/';
        
        if (x.match(/^(?:\.\.?\/|\/)/)) {
            var m = loadAsFileSync(path.resolve(y, x))
                || loadAsDirectorySync(path.resolve(y, x));
            if (m) return m;
        }
        
        var n = loadNodeModulesSync(x, y);
        if (n) return n;
        
        throw new Error("Cannot find module '" + x + "'");
        
        function loadAsFileSync (x) {
            if (require.modules[x]) {
                return x;
            }
            
            for (var i = 0; i < require.extensions.length; i++) {
                var ext = require.extensions[i];
                if (require.modules[x + ext]) return x + ext;
            }
        }
        
        function loadAsDirectorySync (x) {
            x = x.replace(/\/+$/, '');
            var pkgfile = x + '/package.json';
            if (require.modules[pkgfile]) {
                var pkg = require.modules[pkgfile]();
                var b = pkg.browserify;
                if (typeof b === 'object' && b.main) {
                    var m = loadAsFileSync(path.resolve(x, b.main));
                    if (m) return m;
                }
                else if (typeof b === 'string') {
                    var m = loadAsFileSync(path.resolve(x, b));
                    if (m) return m;
                }
                else if (pkg.main) {
                    var m = loadAsFileSync(path.resolve(x, pkg.main));
                    if (m) return m;
                }
            }
            
            return loadAsFileSync(x + '/index');
        }
        
        function loadNodeModulesSync (x, start) {
            var dirs = nodeModulesPathsSync(start);
            for (var i = 0; i < dirs.length; i++) {
                var dir = dirs[i];
                var m = loadAsFileSync(dir + '/' + x);
                if (m) return m;
                var n = loadAsDirectorySync(dir + '/' + x);
                if (n) return n;
            }
            
            var m = loadAsFileSync(x);
            if (m) return m;
        }
        
        function nodeModulesPathsSync (start) {
            var parts;
            if (start === '/') parts = [ '' ];
            else parts = path.normalize(start).split('/');
            
            var dirs = [];
            for (var i = parts.length - 1; i >= 0; i--) {
                if (parts[i] === 'node_modules') continue;
                var dir = parts.slice(0, i + 1).join('/') + '/node_modules';
                dirs.push(dir);
            }
            
            return dirs;
        }
    };
})();

require.alias = function (from, to) {
    var path = require.modules.path();
    var res = null;
    try {
        res = require.resolve(from + '/package.json', '/');
    }
    catch (err) {
        res = require.resolve(from, '/');
    }
    var basedir = path.dirname(res);
    
    var keys = (Object.keys || function (obj) {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    })(require.modules);
    
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (key.slice(0, basedir.length + 1) === basedir + '/') {
            var f = key.slice(basedir.length);
            require.modules[to + f] = require.modules[basedir + f];
        }
        else if (key === basedir) {
            require.modules[to] = require.modules[basedir];
        }
    }
};

require.define = function (filename, fn) {
    var dirname = require._core[filename]
        ? ''
        : require.modules.path().dirname(filename)
    ;
    
    var require_ = function (file) {
        return require(file, dirname)
    };
    require_.resolve = function (name) {
        return require.resolve(name, dirname);
    };
    require_.modules = require.modules;
    require_.define = require.define;
    var module_ = { exports : {} };
    
    require.modules[filename] = function () {
        require.modules[filename]._cached = module_.exports;
        fn.call(
            module_.exports,
            require_,
            module_,
            module_.exports,
            dirname,
            filename
        );
        require.modules[filename]._cached = module_.exports;
        return module_.exports;
    };
};

if (typeof process === 'undefined') process = {};

if (!process.nextTick) process.nextTick = (function () {
    var queue = [];
    var canPost = typeof window !== 'undefined'
        && window.postMessage && window.addEventListener
    ;
    
    if (canPost) {
        window.addEventListener('message', function (ev) {
            if (ev.source === window && ev.data === 'browserify-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);
    }
    
    return function (fn) {
        if (canPost) {
            queue.push(fn);
            window.postMessage('browserify-tick', '*');
        }
        else setTimeout(fn, 0);
    };
})();

if (!process.title) process.title = 'browser';

if (!process.binding) process.binding = function (name) {
    if (name === 'evals') return require('vm')
    else throw new Error('No such module')
};

if (!process.cwd) process.cwd = function () { return '.' };

require.define("path", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "function filter (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (fn(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length; i >= 0; i--) {\n    var last = parts[i];\n    if (last == '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Regex to split a filename into [*, dir, basename, ext]\n// posix version\nvar splitPathRe = /^(.+\\/(?!$)|\\/)?((?:.+?)?(\\.[^.]*)?)$/;\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\nvar resolvedPath = '',\n    resolvedAbsolute = false;\n\nfor (var i = arguments.length; i >= -1 && !resolvedAbsolute; i--) {\n  var path = (i >= 0)\n      ? arguments[i]\n      : process.cwd();\n\n  // Skip empty and invalid entries\n  if (typeof path !== 'string' || !path) {\n    continue;\n  }\n\n  resolvedPath = path + '/' + resolvedPath;\n  resolvedAbsolute = path.charAt(0) === '/';\n}\n\n// At this point the path should be resolved to a full absolute path, but\n// handle relative paths to be safe (might happen when process.cwd() fails)\n\n// Normalize the path\nresolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\nvar isAbsolute = path.charAt(0) === '/',\n    trailingSlash = path.slice(-1) === '/';\n\n// Normalize the path\npath = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n  \n  return (isAbsolute ? '/' : '') + path;\n};\n\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    return p && typeof p === 'string';\n  }).join('/'));\n};\n\n\nexports.dirname = function(path) {\n  var dir = splitPathRe.exec(path)[1] || '';\n  var isWindows = false;\n  if (!dir) {\n    // No dirname\n    return '.';\n  } else if (dir.length === 1 ||\n      (isWindows && dir.length <= 3 && dir.charAt(1) === ':')) {\n    // It is just a slash or a drive letter with a slash\n    return dir;\n  } else {\n    // It is a full dirname, strip trailing slash\n    return dir.substring(0, dir.length - 1);\n  }\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPathRe.exec(path)[2] || '';\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPathRe.exec(path)[3] || '';\n};\n\n//@ sourceURL=path"
));

require.define("/core.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "\"use strict\"\n\nvar EventEmitter = require(\"eventemitter-light\"),\n    pd = require(\"pd\");\n\n/*\n    Modules have four phases. The first two are handled for you\n\n    The definition phase:\n\n        When a module is used on the core, the core will inspect the module\n            by reading it's expose property. It then copies the methods in the\n            expose array out of the array and calls it the interface of the \n            module\n\n        At this the interface is wrapped in a proxy that invokes it indirectly.\n            this proxy is the public interface, this indirection is added to\n            support hot reloading of interfaces\n\n    Someone calls Core.init() and then the following three phases occur\n\n    The injection phase:\n\n        When the core is initialized all the dependencies are injected into\n            all the modules. This injection is based on the dependency mapping\n            passed into the core when it's constructed\n\n        Injection basically means mixing in the dependencies into the module\n\n    The setup phase:\n\n        The setup phase happens after dependencies are injected for all the\n            modules. In this phase the core calls the setup method of\n            the modules with an optional done callback\n\n        This allows modules to do asynchronous setup logic and tell the Core\n            \"hey I'm ready to go now\"\n\n    The init phase:\n\n        After all the modules are ready the init method is invoked on \n            modules that have it.\n\n        The init method is used to start your application, i.e. create your \n            HTTP server or start your cron jobs, etc.\n\n    Note that inside the interfaces methods the thisContext value is the module\n        itself.\n*/\nmodule.exports = {\n    /*\n        Construct a Core with dependencies and an optional EventEmitter \n            prototype. \n\n        The dependencies contain the dependency mapping setup for\n            modules, so the core knows what dependencies to inject into what\n            modules. \n\n        The eventemitter prototype is used to choose the eventEmitter \n            implementation that interfaces have.\n\n        @param {Object} dependencies - This is a map of dependencies.\n            {\n                <ModuleName>: {\n                    <PropertyName>: <OtherModuleName>\n                }\n            }\n\n            This means that <ModuleName> will have a deps object injected with\n                a property <PropertyName> which contains the public interface\n                of <OtherModuleName>\n\n        @param {Object} [ee] - An optional EventEmitter prototype. Used if you \n            want the interface to inherit from a different EventEmitter then\n            eventemitter-light\n    */\n    constructor: function constructor(dependencies, ee) {\n        var that = this;\n        that.interfaces  = {};\n        that._ee = ee || EventEmitter;\n        that._modules = {};\n        that._interfaces = {};\n        that.dependencies = dependencies || {};\n        return that;\n    },\n    /*\n        This is used to attach a module to the core. When a module is attached\n            the core asks the module what interface it exposes\n        \n        @param {String} name - The name of this module\n\n        @param {Object} module - The implementation of the module. \n\n        @return {Object} interface - the public interface of this module is\n            returned\n    */\n    use: function use(name, module) {\n        var _interface = pd.bindAll({}, this._ee);\n        pd.bindAll(module, {\n            emit: _interface.emit\n        })\n        _interface.constructor()\n        if (Array.isArray(module.expose)) {\n            module.expose.forEach(addToInterface)\n        } else {\n            pd.extend(_interface, module.expose || module)\n        }\n        this._makeProxy(name, _interface, module)\n        return this.interfaces[name]\n\n        function addToInterface(name) {\n            _interface[name] = module[name]\n        }\n    },\n    /*\n        init will initialize the Core. This means injecting the dependencies\n            into modules based on the dependency mapping. \n\n        @param {Function} [callback] - optional callback to be invoked when\n            all modules are done injecting dependencies\n    */\n    init: function init(callback) {\n        var that = this,\n            counter = 1\n\n        Object.keys(that._interfaces).forEach(injectDeps)\n        Object.keys(that._interfaces).forEach(setupModules)\n        next()\n\n        function injectDeps(name) {\n            var module = that._modules[name],\n                deps = {}\n\n            if (that.dependencies[name]) {\n                Object.keys(that.dependencies[name]).forEach(mapToInterface)\n            }\n            pd.extend(module, deps);\n\n            function mapToInterface(key) {\n                var dependency = that.dependencies[name][key]\n                if (typeof dependency === \"string\") {\n                    deps[key] = that.interfaces[dependency]   \n                } else if (Array.isArray(dependency)) {\n                    deps[key] = dependency.map(returnInterface)\n                } else if (typeof dependency === \"object\") {\n                    deps[key] = {}\n                    Object.keys(dependency).forEach(setDependency)\n                }\n                \n                function returnInterface(dependency) {\n                    return that.interfaces[dependency]\n                }\n\n                function setDependency(name) {\n                    deps[key][name] = that.interfaces[dependency[name]]\n                }\n            }\n        }\n\n        function setupModules(name) {\n            var module = that._modules[name]\n\n            if (module.setup) {\n                if (module.setup.length === 1) {\n                    counter++\n                }\n                module.setup(next)\n            }\n        }\n\n        function next() {\n            if (--counter === 0) {\n                callback && callback()\n                Object.keys(that._modules).forEach(invokeInit)\n            }\n        }\n\n        function invokeInit(name) {\n            var module = that._modules[name]\n            module.init && module.init()\n        }\n    },\n    /*\n        remove, removes the module from the Core. It will also invoke the \n            module's destroy method, allowing the module to do clean up logic.  \n\n        @param {String} name - The module to remove\n    */\n    remove: function remove(name) {\n        var that = this,\n            module = that._modules[name]\n\n        delete that.interfaces[name]\n        delete that._interfaces[name]\n        delete that._modules[name]\n\n        module.destroy && module.destroy()\n    },\n    /*\n        purge just removes all modules from the Core. basically resetting the\n            core to a clean state.\n    */\n    purge: function purge() {\n        Object.keys(this.interfaces).forEach(callRemove, this)\n        \n        function callRemove(name) {\n            this.remove(name)\n        }\n    },\n    /*\n        makeProxy takes an interface and a module and stores a proxy of the \n            interface as the public interface under Core.interfaces\n\n        @param {String} name - name of module\n\n        @param {Object} interface - internal interface object\n\n        @param {Object} module - module object of module\n    */\n    _makeProxy: function _makeProxy(name, _interface, module) {\n        var proxy = {},\n            that = this\n\n        Object.keys(_interface).forEach(proxyProperty)\n        that._interfaces[name] = _interface\n        that._modules[name] = module\n        that.interfaces[name] = proxy\n\n        function proxyProperty(name) {\n            var value = _interface[name]\n            if (typeof value === \"function\") {\n                _interface[name] = value.bind(module)\n                proxy[name] = proxyFunction(name)\n            } else {\n                proxy[name] = value\n            }\n        }\n\n        function proxyFunction(functionName) {\n            return proxy\n\n            function proxy() {\n                return that._interfaces[name][functionName]\n                    .apply(this, arguments)\n            }\n        }\n    }\n}\n//@ sourceURL=/core.js"
));

require.define("/node_modules/eventemitter-light/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"lib/ee\"}\n//@ sourceURL=/node_modules/eventemitter-light/package.json"
));

require.define("/node_modules/eventemitter-light/lib/ee.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\n    on: function on(ev, handler) {\n        var events = this._events;\n\n        (events[ev] || (events[ev] = [])).push(handler);\n    },\n    removeListener: function removeListener(ev, handler) {\n        var array = this._events[ev];\n\n        array && array.splice(array.indexOf(handler), 1);\n    },\n    emit: function emit(ev) {\n        var args = [].slice.call(arguments, 1),\n            array = this._events[ev] || [];\n\n        for (var i = 0, len = array.length; i < len; i++) {\n            array[i].apply(this, args);\n        }\n    },\n    once: function once(ev, handler) {\n        this.on(ev, proxy);\n\n        function proxy() {\n            handler.apply(this, arguments);\n            this.removeListener(ev, handler);\n        }\n    },\n    constructor: function constructor() {\n        this._events = {};\n        return this;\n    }\n};\n//@ sourceURL=/node_modules/eventemitter-light/lib/ee.js"
));

require.define("/node_modules/pd/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"lib/pd\"}\n//@ sourceURL=/node_modules/pd/package.json"
));

require.define("/node_modules/pd/lib/pd.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*\n    pd(obj) -> propertyDescriptorsOfObject {\n        bindAll: function that binds all the methods of an object to the object,\n        extend: function that extends the first argument with the rest\n        Name: returns a namespace(anyKey) -> uniqueObject function\n    }\n    \n    pd requires ES5. Uses the shimmable subset of ES5.\n*/\n;(function (Object, slice) {\n    \"use strict\"\n    \n    pd.bindAll = bindAll\n    pd.extend = extend\n    pd.Name = Name\n    \n    typeof module !== \"undefined\" ? module.exports = pd : window.pd = pd\n\n    /*\n        pd will return all the own propertydescriptors of the object\n\n        @param Object object - object to get pds from.\n\n        @return Object - A hash of key/propertyDescriptors\n    */    \n    function pd(obj) {\n        var pds = {}\n        Object.getOwnPropertyNames(obj).forEach(function(key) {\n            pds[key] = Object.getOwnPropertyDescriptor(obj, key)\n        })\n        return pds\n    }\n\n    /*\n        Extend will extend the firat parameter with any other parameters \n        passed in. Only the own property names will be extended into\n        the object\n\n        @param Object target - target to be extended\n        @arguments Array [target, ...] - the rest of the objects passed\n            in will extended into the target\n\n        @return Object - the target\n    */\n    function extend(target) {\n        slice.call(arguments, 1).forEach(function(source) {\n            Object.defineProperties(target, pd(source))\n        });\n        return target\n    }\n\n    /*\n        defines a namespace object. This hides a \"privates\" object on object \n        under the \"key\" namespace\n\n        @param Object object - object to hide a privates object on\n        @param Object key - key to hide it under\n\n        @author Gozala : https://gist.github.com/1269991\n\n        @return Object privates\n    */\n    function namespace(object, key) {\n        var privates = Object.create(object),\n            valueOf = object.valueOf\n        \n        Object.defineProperty(object, \"valueOf\", {\n            value: function(value) {\n                return value !== key ? valueOf.apply(this, arguments) : privates\n            },\n            writable: true,\n            configurable: true\n        })\n        \n        return privates\n    }\n    \n    /*\n        Constructs a Name function, when given an object it will return a\n        privates object. \n\n        @author Gozala : https://gist.github.com/1269991\n\n        @return Function name\n    */\n    function Name() {\n        var key = {}\n        return name\n        \n        function name(object) {\n            var privates = object.valueOf(key)\n            return privates !== object ? privates : namespace(object, key)\n        }\n    }\n    \n    /*\n        bindAll binds all methods to have their context set to the object\n\n        @param Object obj - the object to bind methods on\n        @arguments Array [target, ...] - the rest of the objects passed\n            in will extended into the obj\n\n        @return Object - the bound object\n    */\n    function bindAll(obj) {\n        pd.extend.apply(null, arguments) \n        Object.keys(obj).filter(isMethod).forEach(bindMethods)\n        return obj\n        \n        function isMethod(name) {\n            return obj[name] && obj[name].bind === isMethod.bind\n        }\n        \n        function bindMethods(name) {\n            obj[name] = obj[name].bind(obj)\n        }\n    }\n\n})(Object, [].slice)\n//@ sourceURL=/node_modules/pd/lib/pd.js"
));

require.define("/client/app.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var Router = {\n    handle: function (event) {\n        var uri = window.location.pathname\n        this._routes.forEach(function (route) {\n            if (route.uri === uri) {\n                route.dispatch({\n                    uri: uri,\n                    event: event\n                })\n            }\n        })\n    },\n    get: function (uri, callback) {\n        this._routes.push({\n            uri: uri,\n            dispatch: callback\n        })\n    },\n    on: function (event, selector, callback) {\n        if (typeof selector === \"function\") {\n            callback = selector\n            selector = null\n        }\n        document.addEventListener(event, function (ev) {\n            var result,\n                target = ev.target\n            do {\n                if (selector === null || (target.webkitMatchesSelector &&\n                    target.webkitMatchesSelector(selector))\n                ) {\n                    delete ev.target\n                    ev.target = target\n                    result = callback.apply(this, arguments)\n                }\n            } while (\n                result !== false && \n                target !== this &&\n                (target = target.parentNode)\n            )\n            return result\n        }, true)\n    },\n    _routes: []\n}\n\nwindow.onpopstate = function (event) {\n    Router.handle(event)\n}\n\nmodule.exports = {\n    setup: function (done) {\n        Object.keys(this.routes).forEach(function (name) {\n            this.routes[name].start(Router)\n        }, this)\n        console.log(\"setup routes\")\n        document.addEventListener(\"DOMContentLoaded\", done)\n    }\n}\n//@ sourceURL=/client/app.js"
));

require.define("/client/routes/players.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "\nmodule.exports = {\n    start: function (router) {\n        router.get(\"/players\", this.index)\n        router.get(\"/\", this.index)\n        router.on(\"click\", \".player\", this.handleSelectedPlayer)\n    },\n    index: function () {\n        this.view.enhance()\n    },\n    handleSelectedPlayer: function (ev) {\n        this.view.selectPlayer(ev.target)\n    }\n}\n//@ sourceURL=/client/routes/players.js"
));

require.define("/client/views/players.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var composite = require(\"nodecomposite\")\n\nmodule.exports = {\n    enhance: function () {\n        this.enhancePlayers()\n        this.enhanceAddPlayer()\n        this.enhanceAddPoints()\n    },\n    selectPlayer: function (target) {\n        composite.By.class(\"selected\").classList.remove(\"selected\")\n\n        target.classList.add(\"selected\")\n\n        this.enhanceAddPoints()\n    },\n    enhancePlayers: function () {\n        var nodes = composite.By.class(\"player\")\n\n        nodes.forEach(this.convertToSpans)\n    },\n    enhanceAddPlayer: function () {\n        var addPlayer = document.getElementById(\"addPlayer\")\n\n        addPlayer.parentNode.removeChild(addPlayer)\n    },\n    enhanceAddPoints: function () {\n        var details = document.getElementsByClassName(\"details\")[0],\n            selected = document.getElementsByClassName(\"selected\")[0],\n            selected_name = selected && selected.firstElementChild.textContent\n\n        console.log(selected && selected_name)\n\n        this.util.template(\"/addPoints.dust\", {\n            selected_name: selected_name\n        }, function (err, frag) {\n            details.parentNode.replaceChild(frag, details)\n        })\n    },\n    convertToSpans: function (node) {\n        this.util.template(\"/player.dust\", {\n            name: node.elements.name.value,\n            score: node.elements.score.value\n        }, function (err, frag) {\n            node.parentNode.replaceChild(frag, node)\n        })\n    }\n}\n//@ sourceURL=/client/views/players.js"
));

require.define("/node_modules/nodecomposite/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"lib/nodecomposite\"}\n//@ sourceURL=/node_modules/nodecomposite/package.json"
));

require.define("/node_modules/nodecomposite/lib/nodecomposite.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var ClassList = require(\"./classlist.js\"),\n    Style = require(\"./style.js\");\n\nvar toArray = [].slice.call.bind([].slice);\n/*  set {\n        classList: manipulates classes in every element in the set\n        style: manipulate the CSS style of every element in the set\n        parentNode, parentElement, previousSibling, etc: all return new sets of the collective operation\n        normalize: normalizes all elements\n        cloneNode: returns a set of clones of all elements\n        getElementsByX, querySelector, querySelectorAll: returns a new set of the result applied to all nodes\n        forEach, map, filter, reduce, etc: run the array methods on the nodes property\n    }\n*/\nvar NodeComposite = Object.create(Array.prototype);\n\nNodeComposite.$ = $;\nNodeComposite.By = {\n    id: function byId(id) {\n        return make(document.getElementById(id));\n    },\n    tag: function byTag(tag, context) {\n        return make((context || document).getElementsByTagName(tag));\n    },\n    \"class\": function byClass(klass, context) {\n        return make((context || document).getElementsByClassName(klass));\n    },\n    name: function byName(name) {\n        return make(document.getElementsByName(name));\n    },\n    qsa: function byQuery(query, context) {\n        return make((context || document).querySelectorAll(query));\n    },\n    qs: function byQueryOne(query, context) {\n        return make((context || document).querySelector(query));\n    }\n};\nNodeComposite.add = add;\nNodeComposite.constructor = add;\nNodeComposite.make = make;\n\nObject.defineProperties(NodeComposite, {\n    classList: {\n        get: function getClassList() {\n            return Object.create(ClassList).constructor(this);\n        },\n        configurable: true\n    },\n    style: {\n        get: function getStyle() {\n            return Object.create(Style).constructor(this);\n        },\n        configurable: true\n    }\n});\n\n[\n    \"parentElement\", \n    \"parentNode\",\n    \"childNodes\",\n    \"firstChild\",\n    \"lastChild\",\n    \"previousSibling\",\n    \"nextSibling\",\n    \"children\",\n    \"firstElementChild\",\n    \"lastElementChild\",\n    \"previousElementSibling\",\n    \"nextElementSibling\"\n].forEach(addGetterToNodeComposite);\n\n[\n    \"cloneNode\",\n    \"getElementsByTagName\",\n    \"getElementsByTagNameNS\",\n    \"getElementsByClassName\",\n    \"querySelector\",\n    \"querySelectorAll\"\n].forEach(addReturningOperationToNodeComposite);\n\n[\n    \"addEventListener\",\n    \"removeEventListener\",\n    \"normalize\"\n].forEach(addOperationToNodeComposite);\n\n[\n    \"appendChild\",\n    \"replaceChild\",\n    \"removeChild\",\n    \"insertBefore\"\n].forEach(addBatchOperationToNodeComposite);\n\nmodule.exports = NodeComposite;\n\nfunction make(nodes) {\n    return Object.create(NodeComposite).add(nodes);\n}\n\nfunction $(selector) {\n    return make(document.querySelectorAll(selector));\n}\n\nfunction add() {\n    for (var i = 0, len = arguments.length; i < len; i++) {\n        var val = arguments[i]\n        if (val.nodeType) {\n            this.push(val)\n        } else if (val.length !== undefined) {\n            this.add.apply(this, toArray(val))\n        }\n    }\n    return this\n}\n\nfunction addGetterToNodeComposite(name) {\n    Object.defineProperty(NodeComposite, name, {\n        get: function getName() {\n            return make(this.map(toName));\n\n            function toName(el) {\n                return el[name];\n            }\n        },\n        configurable: true\n    });\n}\n\nfunction addReturningOperationToNodeComposite(name) {\n    NodeComposite[name] = operateOnNodeComposite;\n\n    function operateOnNodeComposite() {\n        var args = arguments;\n        return make(this.map(byOperation));\n\n        function byOperation(el) {\n            return el[name].apply(el, args);\n        }\n    }\n}\n\nfunction addOperationToNodeComposite(name) {\n    NodeComposite[name] = operateOnNodeComposite;\n\n    function operateOnNodeComposite() {\n        var args = arguments;\n        this.forEach(doOperation);\n\n        function doOperation(el) {\n            el[name].apply(el, args);\n        }\n    }\n}\n\nfunction addBatchOperationToNodeComposite(name) {\n    NodeComposite[name] = batchOperateOnNodeComposite;\n\n    function batchOperateOnNodeComposite(node, child) {\n        var args = [].slice.call(arguments);\n        this.forEach(batchOperate);\n        return child || node;\n\n        function batchOperate(element, index) {\n            element[name].apply(element, args.map(getIndex(index)));\n        }\n    }\n\n    function getIndex(index) {\n        return getIndex;\n\n        function getIndex(element) {\n            return element[index];\n        }\n    }\n}\n\nfunction addArrayMethodToNodeComposite(name) {\n    NodeComposite[name] = arrayMethod;\n\n    function arrayMethod() {\n        var arr = Array.prototype[name].apply(this, arguments);\n        return Object.create(NodeComposite).constructor(arr);\n    }\n}\n//@ sourceURL=/node_modules/nodecomposite/lib/nodecomposite.js"
));

require.define("/node_modules/nodecomposite/lib/classlist.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var ClassList = {\n    constructor: function constructor(nodes) {\n        this.classLists = nodes.map(toClassList);\n        return this;\n        \n        function toClassList(element) {\n            return element.classList;\n        }\n    },\n    contains: function contains() {\n        var args = arguments;\n        return this.classLists.some(containsClass);\n\n        function containsClass(classList) {\n            return classList.contains.apply(classList, args);\n        }\n    }\n};\n    \n[\"add\", \"remove\", \"toggle\"].forEach(addToClassList);\n\nmodule.exports = ClassList;\n    \nfunction addToClassList(name) {\n    ClassList[name] = proxy;\n\n    function proxy() {\n        var args = arguments;\n        this.classLists.forEach(applyMethod);\n   \n        function applyMethod(classList) {\n            classList[name].apply(classList, args);\n        } \n    }\n}\n//@ sourceURL=/node_modules/nodecomposite/lib/classlist.js"
));

require.define("/node_modules/nodecomposite/lib/style.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var Style = {\n    constructor: function constructor(nodes) {\n        this.nodes = nodes;\n        return this;\n    }\n};\n\n[].slice.call(window.getComputedStyle(document.head)).forEach(addToStyle);\n\nmodule.exports = Style;\n    \nfunction addToStyle(name) {\n    Object.defineProperty(Style, name, {\n        configurable: true,\n        set: function set(value) {\n            this.nodes.forEach(setValue);\n     \n            function setValue(node) {\n                node.style[name] = value;   \n            }\n        }\n    });\n}\n//@ sourceURL=/node_modules/nodecomposite/lib/style.js"
));

require.define("/client/utils/view.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var indexedStore = require(\"indexedStore\")(\"dust-templates\"),\n    xhr = require(\"xhr\"),\n    dust = require(\"dustjs-linkedin\"),\n    fragment = require(\"fragment\"),\n    cache = {}\n\nwindow.indexedStore = indexedStore\n\nmodule.exports = {\n    template: function (uri, context, callback) {\n        if (cache[uri]) {\n            return compile(cache[uri])\n        }\n\n        indexedStore.get(uri, function (err, result) {\n            if (err) {\n                return callback(err)\n            }\n            if (result === undefined) {\n                return loadWithXHR()\n            }\n            return compileSource(result)\n        })\n\n        function loadWithXHR() {\n            xhr({\n                method: \"GET\",\n                uri: uri\n            }, function (err, response) {\n                if (this.status === 404) {\n                    return callback(new Error(\"template not found\"))\n                }\n                if (err) {\n                    return callback(err)\n                }\n                indexedStore.put(response, uri, function (err, result) {\n                    if (err) {\n                        return callback(err)\n                    }\n                    compileSource(response)\n                })\n            })\n        }\n\n        function compileSource(source) {\n            var fn = dust.compileFn(source)\n            cache[uri] = fn\n\n            compile(fn)\n        }\n\n        function compile(fn) {\n            fn(context, function (err, out) {\n                if (err) {\n                    return callback(err)\n                }\n                return callback(null, fragment(out))\n            })\n        }\n    }\n}\n//@ sourceURL=/client/utils/view.js"
));

require.define("/node_modules/indexedStore/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {}\n//@ sourceURL=/node_modules/indexedStore/package.json"
));

require.define("/node_modules/indexedStore/index.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "(function () {\n\nvar indexedDB = window.webkitIndexedDB || window.mozIndexedDB || \n        window.msIndexedDB || window.indexedDB,\n    objectStore = (window.webkitIDBObjectStore || window.mozIDBObjectStore ||\n        window.msIDBObjectStore || window.IDBObjectStore).prototype,\n    transaction = (window.webkitIDBTransaction || window.mozIDBTransaction ||\n        window.msIDBTransaction || window.IDBTransaction).prototype,\n    cachedResults,\n    callbackQueue\n\nfunction createDB(name, callback) {\n    if (cachedResults) {\n        return callback.apply(cachedResults[1], cachedResults)\n    } else if (callbackQueue) {\n        return callbackQueue.push(callback)\n    }\n\n    callbackQueue = [callback]\n\n    var req = indexedDB.open(name || \"DEFAULT\")\n    req.onupgradeneeded = function () {\n        db.createObjectStore(storeName)\n    }\n    req.onsuccess = invokeCallbacks\n    req.onerror = invokeCallbacks\n\n    function invokeCallbacks(evt) {\n        var callbackList = callbackQueue\n        cachedResults = [evt.target.error, evt.target.result]\n        callbackQueue = null\n        for (var i = 0, len = callbackList.length; i < len; i++) {\n            callbackList[i].apply(cachedResults[1], cachedResults)\n        }\n    }\n}\n\nfunction indexeddb(storeName, databaseName) {\n    return getStore\n\n    function getStore(callback) {\n        createDB(databaseName, function (err, db) {\n            if (!db.objectStoreNames.contains(storeName) &&\n                db.setVersion\n            ) {\n                var req = db.setVersion(\"1.0\")\n                req.onerror = function () {\n                    callback(this.error)\n                }\n                req.onsuccess = function () {\n                    if (!db.objectStoreNames.contains(storeName)) {\n                        db.createObjectStore(storeName)    \n                    }\n                    openStore()\n                }\n            } else {\n                openStore()\n            }\n\n            function openStore() {\n                var trans = db.transaction([storeName], \n                    transaction.READ_WRITE)\n                callback(null, trans.objectStore(storeName))\n            }\n        })\n    }\n}\n\nfunction store(storeName, databaseName) {\n    return Object.create(Store).constructor(\n        indexeddb(storeName, databaseName)\n    )\n}\n\nvar Store = {\n    constructor: function (store) {\n        store((function (err, store) {\n            this._store = store\n        }).bind(this))\n        this.store = store\n        return this\n    }\n}\n\nfunction addToStore(methodName) {\n    try {\n        if (typeof objectStore[methodName] === \"function\" &&\n            methodName !== \"constructor\"\n        ) {\n            Store[methodName] = tunnel(methodName)\n        }    \n    } catch (err) {\n        // FIREFOX fails on objectStore.name because it's a getter/setter\n    }\n    \n}\n\nfunction tunnel(methodName) {\n    return proxy\n\n    function proxy() {\n        var args = [].slice.call(arguments),\n            callback = args.pop()\n\n        this.store(invokeMethod)\n\n        function invokeMethod(err, store) {\n            if (err) {\n                return (callback && callback(err))\n            }\n            var req = store[methodName].apply(store, args)\n            req.onerror = function () {\n                callback && callback(this.error)\n            }\n            req.onsuccess = function () {\n                callback && callback(null, this.result)\n            }\n        }\n    }\n}\n\nObject.keys(objectStore).forEach(addToStore)\n\nstore.indexeddb = indexeddb\nstore.Store = Store\n\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = store    \n} else if (typeof window !== \"undefined\") {\n    window.indexeddbStore = store\n}\n\n\n}())\n//@ sourceURL=/node_modules/indexedStore/index.js"
));

require.define("/node_modules/xhr/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {}\n//@ sourceURL=/node_modules/xhr/package.json"
));

require.define("/node_modules/xhr/index.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var extend = require(\"pd\").extend\n\ncreateXHR.defaults = {}\n\nmodule.exports = createXHR\n\nfunction createXHR(options, callback) {\n    options = extend({}, createXHR.defaults, options)\n    var xhr = new XMLHttpRequest\n    xhr.onreadystatechange = function () {\n        if (this.readyState === 4) {\n            callback.call(this, null, this.response || \n                this.responseText || this.responseXML)\n        }\n    }\n    xhr.onerror = function (evt) {\n        callback.call(this, evt)\n    }\n    xhr.open(options.method, options.uri)\n    if (options.headers) {\n        Object.keys(options.headers).forEach(function (key) {\n            xhr.setRequestHeader(key, options.headers[key])\n        })\n    }\n    xhr.send(options.data)\n    return xhr\n}\n//@ sourceURL=/node_modules/xhr/index.js"
));

require.define("/node_modules/pd/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"lib/pd\"}\n//@ sourceURL=/node_modules/pd/package.json"
));

require.define("/node_modules/pd/lib/pd.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*\n    pd(obj) -> propertyDescriptorsOfObject {\n        bindAll: function that binds all the methods of an object to the object,\n        extend: function that extends the first argument with the rest\n        Name: returns a namespace(anyKey) -> uniqueObject function\n    }\n    \n    pd requires ES5. Uses the shimmable subset of ES5.\n*/\n;(function (Object, slice) {\n    \"use strict\"\n    \n    pd.bindAll = bindAll\n    pd.extend = extend\n    pd.Name = Name\n    \n    typeof module !== \"undefined\" ? module.exports = pd : window.pd = pd\n\n    /*\n        pd will return all the own propertydescriptors of the object\n\n        @param Object object - object to get pds from.\n\n        @return Object - A hash of key/propertyDescriptors\n    */    \n    function pd(obj) {\n        var pds = {}\n        Object.getOwnPropertyNames(obj).forEach(function(key) {\n            pds[key] = Object.getOwnPropertyDescriptor(obj, key)\n        })\n        return pds\n    }\n\n    /*\n        Extend will extend the firat parameter with any other parameters \n        passed in. Only the own property names will be extended into\n        the object\n\n        @param Object target - target to be extended\n        @arguments Array [target, ...] - the rest of the objects passed\n            in will extended into the target\n\n        @return Object - the target\n    */\n    function extend(target) {\n        slice.call(arguments, 1).forEach(function(source) {\n            Object.defineProperties(target, pd(source))\n        });\n        return target\n    }\n\n    /*\n        defines a namespace object. This hides a \"privates\" object on object \n        under the \"key\" namespace\n\n        @param Object object - object to hide a privates object on\n        @param Object key - key to hide it under\n\n        @author Gozala : https://gist.github.com/1269991\n\n        @return Object privates\n    */\n    function namespace(object, key) {\n        var privates = Object.create(object),\n            valueOf = object.valueOf\n        \n        Object.defineProperty(object, \"valueOf\", {\n            value: function(value) {\n                return value !== key ? valueOf.apply(this, arguments) : privates\n            },\n            writable: true,\n            configurable: true\n        })\n        \n        return privates\n    }\n    \n    /*\n        Constructs a Name function, when given an object it will return a\n        privates object. \n\n        @author Gozala : https://gist.github.com/1269991\n\n        @return Function name\n    */\n    function Name() {\n        var key = {}\n        return name\n        \n        function name(object) {\n            var privates = object.valueOf(key)\n            return privates !== object ? privates : namespace(object, key)\n        }\n    }\n    \n    /*\n        bindAll binds all methods to have their context set to the object\n\n        @param Object obj - the object to bind methods on\n        @arguments Array [target, ...] - the rest of the objects passed\n            in will extended into the obj\n\n        @return Object - the bound object\n    */\n    function bindAll(obj) {\n        pd.extend.apply(null, arguments) \n        Object.keys(obj).filter(isMethod).forEach(bindMethods)\n        return obj\n        \n        function isMethod(name) {\n            return obj[name] && obj[name].bind === isMethod.bind\n        }\n        \n        function bindMethods(name) {\n            obj[name] = obj[name].bind(obj)\n        }\n    }\n\n})(Object, [].slice)\n//@ sourceURL=/node_modules/pd/lib/pd.js"
));

require.define("/node_modules/dustjs-linkedin/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"./lib/dust\"}\n//@ sourceURL=/node_modules/dustjs-linkedin/package.json"
));

require.define("/node_modules/dustjs-linkedin/lib/dust.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var dust = {};\n\n(function(dust) {\n\ndust.cache = {};\n\ndust.register = function(name, tmpl) {\n  if (!name) return;\n  dust.cache[name] = tmpl;\n};\n\ndust.render = function(name, context, callback) {\n  var chunk = new Stub(callback).head;\n  dust.load(name, chunk, Context.wrap(context)).end();\n};\n\ndust.stream = function(name, context) {\n  var stream = new Stream();\n  dust.nextTick(function() {\n    dust.load(name, stream.head, Context.wrap(context)).end();\n  });\n  return stream;\n};\n\ndust.renderSource = function(source, context, callback) {\n  return dust.compileFn(source)(context, callback);\n};\n\ndust.compileFn = function(source, name) {\n  var tmpl = dust.loadSource(dust.compile(source, name));\n  return function(context, callback) {\n    var master = callback ? new Stub(callback) : new Stream();\n    dust.nextTick(function() {\n      tmpl(master.head, Context.wrap(context)).end();\n    });\n    return master;\n  }\n};\n\ndust.load = function(name, chunk, context) {\n  var tmpl = dust.cache[name];\n  if (tmpl) {\n    return tmpl(chunk, context);\n  } else {\n    if (dust.onLoad) {\n      return chunk.map(function(chunk) {\n        dust.onLoad(name, function(err, src) {\n          if (err) return chunk.setError(err);\n          if (!dust.cache[name]) dust.loadSource(dust.compile(src, name));\n          dust.cache[name](chunk, context).end();\n        });\n      });\n    }\n    return chunk.setError(new Error(\"Template Not Found: \" + name));\n  }\n};\n\ndust.loadSource = function(source, path) {\n  return eval(source);\n};\n\nif (Array.isArray) {\n  dust.isArray = Array.isArray;\n} else {\n  dust.isArray = function(arr) {\n    return Object.prototype.toString.call(arr) == \"[object Array]\";\n  };\n}\n\ndust.nextTick = function(callback) {\n  setTimeout(callback, 0);\n}\n\ndust.isEmpty = function(value) {\n  if (dust.isArray(value) && !value.length) return true;\n  if (value === 0) return false;\n  return (!value);\n};\n\ndust.filter = function(string, auto, filters) {\n  if (filters) {\n    for (var i=0, len=filters.length; i<len; i++) {\n      var name = filters[i];\n      if (name === \"s\") {\n        auto = null;\n      } else {\n        string = dust.filters[name](string);\n      }\n    }\n  }\n  if (auto) {\n    string = dust.filters[auto](string);\n  }\n  return string;\n};\n\ndust.filters = {\n  h: function(value) { return dust.escapeHtml(value); },\n  j: function(value) { return dust.escapeJs(value); },\n  u: encodeURI,\n  uc: encodeURIComponent\n}\n\nfunction Context(stack, global, blocks) {\n  this.stack  = stack;\n  this.global = global;\n  this.blocks = blocks;\n}\n\ndust.makeBase = function(global) {\n  return new Context(new Stack(), global);\n}\n\nContext.wrap = function(context) {\n  if (context instanceof Context) {\n    return context;\n  }\n  return new Context(new Stack(context));\n}\n\nContext.prototype.get = function(key) {\n  var ctx = this.stack, value;\n\n  while(ctx) {\n    if (ctx.isObject) {\n      value = ctx.head[key];\n      if (!(value === undefined)) {\n        return value;\n      }\n    }\n    ctx = ctx.tail;\n  }\n  return this.global ? this.global[key] : undefined;\n};\n\nContext.prototype.getPath = function(cur, down) {\n  var ctx = this.stack,\n      len = down.length;\n\n  if (cur && len === 0) return ctx.head;\n  if (!ctx.isObject) return undefined;\n  ctx = ctx.head;\n  var i = 0;\n  while(ctx && i < len) {\n    ctx = ctx[down[i]];\n    i++;\n  }\n  return ctx;\n};\n\nContext.prototype.push = function(head, idx, len) {\n  if( head ){\n   // loop index for a block section\n   head['$idx'] = idx;\n   // loop size for a block section\n   head['$len'] = len;\n  }\n  return new Context(new Stack(head, this.stack, idx, len), this.global, this.blocks);\n};\n\nContext.prototype.rebase = function(head) {\n  return new Context(new Stack(head), this.global, this.blocks);\n};\n\nContext.prototype.current = function() {\n  return this.stack.head;\n};\n\nContext.prototype.getBlock = function(key) {\n  var blocks = this.blocks;\n\n  if (!blocks) return;\n  var len = blocks.length, fn;\n  while (len--) {\n    fn = blocks[len][key];\n    if (fn) return fn;\n  }\n}\n\nContext.prototype.shiftBlocks = function(locals) {\n  var blocks = this.blocks;\n\n  if (locals) {\n    if (!blocks) {\n      newBlocks = [locals];\n    } else {\n      newBlocks = blocks.concat([locals]);\n    }\n    return new Context(this.stack, this.global, newBlocks);\n  }\n  return this;\n}\n\nfunction Stack(head, tail, idx, len) {\n  this.tail = tail;\n  this.isObject = !dust.isArray(head) && head && typeof head === \"object\";\n  this.head = head;\n  this.index = idx;\n  this.of = len;\n}\n\nfunction Stub(callback) {\n  this.head = new Chunk(this);\n  this.callback = callback;\n  this.out = '';\n}\n\nStub.prototype.flush = function() {\n  var chunk = this.head;\n\n  while (chunk) {\n    if (chunk.flushable) {\n      this.out += chunk.data;\n    } else if (chunk.error) {\n      this.callback(chunk.error);\n      this.flush = function() {};\n      return;\n    } else {\n      return;\n    }\n    chunk = chunk.next;\n    this.head = chunk;\n  }\n  this.callback(null, this.out);\n}\n\nfunction Stream() {\n  this.head = new Chunk(this);\n}\n\nStream.prototype.flush = function() {\n  var chunk = this.head;\n\n  while(chunk) {\n    if (chunk.flushable) {\n      this.emit('data', chunk.data);\n    } else if (chunk.error) {\n      this.emit('error', chunk.error);\n      this.flush = function() {};\n      return;\n    } else {\n      return;\n    }\n    chunk = chunk.next;\n    this.head = chunk;\n  }\n  this.emit('end');\n}\n\nStream.prototype.emit = function(type, data) {\n  var events = this.events;\n\n  if (events && events[type]) {\n    events[type](data);\n  }\n}\n\nStream.prototype.on = function(type, callback) {\n  if (!this.events) {\n    this.events = {};\n  }\n  this.events[type] = callback;\n  return this;\n}\n\nfunction Chunk(root, next, taps) {\n  this.root = root;\n  this.next = next;\n  this.data = '';\n  this.flushable = false;\n  this.taps = taps;\n}\n\nChunk.prototype.write = function(data) {\n  var taps  = this.taps;\n\n  if (taps) {\n    data = taps.go(data);\n  }\n  this.data += data;\n  return this;\n}\n\nChunk.prototype.end = function(data) {\n  if (data) {\n    this.write(data);\n  }\n  this.flushable = true;\n  this.root.flush();\n  return this;\n}\n\nChunk.prototype.map = function(callback) {\n  var cursor = new Chunk(this.root, this.next, this.taps),\n      branch = new Chunk(this.root, cursor, this.taps);\n\n  this.next = branch;\n  this.flushable = true;\n  callback(branch);\n  return cursor;\n}\n\nChunk.prototype.tap = function(tap) {\n  var taps = this.taps;\n\n  if (taps) {\n    this.taps = taps.push(tap);\n  } else {\n    this.taps = new Tap(tap);\n  }\n  return this;\n}\n\nChunk.prototype.untap = function() {\n  this.taps = this.taps.tail;\n  return this;\n}\n\nChunk.prototype.render = function(body, context) {\n  return body(this, context);\n}\n\nChunk.prototype.reference = function(elem, context, auto, filters) {\n  if (typeof elem === \"function\") {\n    elem = elem(this, context, null, {auto: auto, filters: filters});\n    if (elem instanceof Chunk) {\n      return elem;\n    }\n  }\n  if (!dust.isEmpty(elem)) {\n    return this.write(dust.filter(elem, auto, filters));\n  } else {\n    return this;\n  }\n};\n\nChunk.prototype.section = function(elem, context, bodies, params) {\n  if (typeof elem === \"function\") {\n    elem = elem(this, context, bodies, params);\n    if (elem instanceof Chunk) {\n      return elem;\n    }\n  }\n\n  var body = bodies.block,\n      skip = bodies['else'];\n\n  if (params) {\n    context = context.push(params);\n  }\n\n  if (dust.isArray(elem)) {\n    if (body) {\n      var len = elem.length, chunk = this;\n      for (var i=0; i<len; i++) {\n        chunk = body(chunk, context.push(elem[i], i, len));\n      }\n      return chunk;\n    }\n  } else if (elem === true) {\n    if (body) return body(this, context);\n  } else if (elem || elem === 0) {\n    if (body) return body(this, context.push(elem));\n  } else if (skip) {\n    return skip(this, context);\n  }\n  return this;\n};\n\nChunk.prototype.exists = function(elem, context, bodies) {\n  var body = bodies.block,\n      skip = bodies['else'];\n\n  if (!dust.isEmpty(elem)) {\n    if (body) return body(this, context);\n  } else if (skip) {\n    return skip(this, context);\n  }\n  return this;\n}\n\nChunk.prototype.notexists = function(elem, context, bodies) {\n  var body = bodies.block,\n      skip = bodies['else'];\n\n  if (dust.isEmpty(elem)) {\n    if (body) return body(this, context);\n  } else if (skip) {\n    return skip(this, context);\n  }\n  return this;\n}\n\nChunk.prototype.block = function(elem, context, bodies) {\n  var body = bodies.block;\n\n  if (elem) {\n    body = elem;\n  }\n\n  if (body) {\n    return body(this, context);\n  }\n  return this;\n};\n\nChunk.prototype.partial = function(elem, context) {\n  if (typeof elem === \"function\") {\n    return this.capture(elem, context, function(name, chunk) {\n      dust.load(name, chunk, context).end();\n    });\n  }\n  return dust.load(elem, this, context);\n};\n\nChunk.prototype.helper = function(name, context, bodies, params) {\n  return dust.helpers[name](this, context, bodies, params);\n};\n\nChunk.prototype.capture = function(body, context, callback) {\n  return this.map(function(chunk) {\n    var stub = new Stub(function(err, out) {\n      if (err) {\n        chunk.setError(err);\n      } else {\n        callback(out, chunk);\n      }\n    });\n    body(stub.head, context).end();\n  });\n};\n\nChunk.prototype.setError = function(err) {\n  this.error = err;\n  this.root.flush();\n  return this;\n};\n\nfunction Tap(head, tail) {\n  this.head = head;\n  this.tail = tail;\n}\n\nTap.prototype.push = function(tap) {\n  return new Tap(tap, this);\n};\n\nTap.prototype.go = function(value) {\n  var tap = this;\n\n  while(tap) {\n    value = tap.head(value);\n    tap = tap.tail;\n  }\n  return value;\n};\n\nvar HCHARS = new RegExp(/[&<>\\\"]/),\n    AMP    = /&/g,\n    LT     = /</g,\n    GT     = />/g,\n    QUOT   = /\\\"/g;\n\ndust.escapeHtml = function(s) {\n  if (typeof s === \"string\") {\n    if (!HCHARS.test(s)) {\n      return s;\n    }\n    return s.replace(AMP,'&amp;').replace(LT,'&lt;').replace(GT,'&gt;').replace(QUOT,'&quot;');\n  }\n  return s;\n};\n\nvar BS = /\\\\/g,\n    CR = /\\r/g,\n    LS = /\\u2028/g,\n    PS = /\\u2029/g,\n    NL = /\\n/g,\n    LF = /\\f/g,\n    SQ = /'/g,\n    DQ = /\"/g,\n    TB = /\\t/g;\n\ndust.escapeJs = function(s) {\n  if (typeof s === \"string\") {\n    return s\n      .replace(BS, '\\\\\\\\')\n      .replace(DQ, '\\\\\"')\n      .replace(SQ, \"\\\\'\")\n      .replace(CR, '\\\\r')\n      .replace(LS, '\\\\u2028')\n      .replace(PS, '\\\\u2029')\n      .replace(NL, '\\\\n')\n      .replace(LF, '\\\\f')\n      .replace(TB, \"\\\\t\");\n  }\n  return s;\n};\n\n})(dust);\n\nif (typeof exports !== \"undefined\") {\n  dust.helpers = require(\"./dust-helpers\").helpers;\n  if (typeof process !== \"undefined\") {\n      require('./server')(dust);\n  }\n  module.exports = dust;\n}\n\n//@ sourceURL=/node_modules/dustjs-linkedin/lib/dust.js"
));

require.define("/node_modules/dustjs-linkedin/lib/dust-helpers.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "(function(dust){\n  \nvar helpers = {\n  \n  sep: function(chunk, context, bodies) {\n    if (context.stack.index === context.stack.of - 1) {\n      return chunk;\n    }\n    return bodies.block(chunk, context);\n  },\n\n  idx: function(chunk, context, bodies) {\n    return bodies.block(chunk, context.push(context.stack.index));\n  },\n  \n  if: function( chunk, context, bodies, params ){\n    var cond = ( params.cond );\n    \n    if( params && params.cond ){\n      // resolve dust references in the expression\n      if( typeof cond === \"function\" ){\n        cond = '';\n        chunk.tap( function( data ){\n          cond += data;\n          return '';\n        } ).render( params.cond, context ).untap();\n        if( cond === '' ){\n          cond = false;\n        }\n      }\n      // eval expressions with no dust references\n      if( eval( cond ) ){\n       return chunk.render( bodies.block, context );\n      } \n      if( bodies['else'] ){\n       return chunk.render( bodies['else'], context );\n      }\n    } \n    // no condition\n    else {\n      if( window.console ){\n        window.console.log( \"No expression given!\" );\n      }\n    }\n    return chunk;\n  }\n};\n\ndust.helpers = helpers;\n\n})(typeof exports !== 'undefined' ? exports : window.dust);\n//@ sourceURL=/node_modules/dustjs-linkedin/lib/dust-helpers.js"
));

require.define("/node_modules/dustjs-linkedin/lib/server.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var path = require('path'),\n    parser = require('./parser'),\n    compiler = require('./compiler'),\n    vm = require('vm');\n\nmodule.exports = function(dust) {\n  compiler.parse = parser.parse;\n  dust.compile = compiler.compile;\n\n  dust.loadSource = function(source, path) {\n    return vm.runInNewContext(source, {dust: dust}, path);\n  };\n\n  dust.nextTick = process.nextTick;\n\n  // expose optimizers in commonjs env too\n  dust.optimizers = compiler.optimizers;\n}\n\n//@ sourceURL=/node_modules/dustjs-linkedin/lib/server.js"
));

require.define("/node_modules/dustjs-linkedin/lib/parser.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "(function(dust){\n\nvar parser = (function(){\n  /* Generated by PEG.js 0.6.2 (http://pegjs.majda.cz/). */\n  \n  var result = {\n    /*\n     * Parses the input with a generated parser. If the parsing is successfull,\n     * returns a value explicitly or implicitly specified by the grammar from\n     * which the parser was generated (see |PEG.buildParser|). If the parsing is\n     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.\n     */\n    parse: function(input, startRule) {\n      var parseFunctions = {\n        \"bodies\": parse_bodies,\n        \"body\": parse_body,\n        \"buffer\": parse_buffer,\n        \"comment\": parse_comment,\n        \"context\": parse_context,\n        \"end_tag\": parse_end_tag,\n        \"eol\": parse_eol,\n        \"esc\": parse_esc,\n        \"filters\": parse_filters,\n        \"identifier\": parse_identifier,\n        \"inline\": parse_inline,\n        \"inline_part\": parse_inline_part,\n        \"key\": parse_key,\n        \"ld\": parse_ld,\n        \"literal\": parse_literal,\n        \"params\": parse_params,\n        \"part\": parse_part,\n        \"partial\": parse_partial,\n        \"path\": parse_path,\n        \"rd\": parse_rd,\n        \"reference\": parse_reference,\n        \"sec_tag_start\": parse_sec_tag_start,\n        \"section\": parse_section,\n        \"special\": parse_special,\n        \"tag\": parse_tag,\n        \"ws\": parse_ws\n      };\n      \n      if (startRule !== undefined) {\n        if (parseFunctions[startRule] === undefined) {\n          throw new Error(\"Invalid rule name: \" + quote(startRule) + \".\");\n        }\n      } else {\n        startRule = \"body\";\n      }\n      \n      var pos = 0;\n      var reportMatchFailures = true;\n      var rightmostMatchFailuresPos = 0;\n      var rightmostMatchFailuresExpected = [];\n      var cache = {};\n      \n      function padLeft(input, padding, length) {\n        var result = input;\n        \n        var padLength = length - input.length;\n        for (var i = 0; i < padLength; i++) {\n          result = padding + result;\n        }\n        \n        return result;\n      }\n      \n      function escape(ch) {\n        var charCode = ch.charCodeAt(0);\n        \n        if (charCode <= 0xFF) {\n          var escapeChar = 'x';\n          var length = 2;\n        } else {\n          var escapeChar = 'u';\n          var length = 4;\n        }\n        \n        return '\\\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);\n      }\n      \n      function quote(s) {\n        /*\n         * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a\n         * string literal except for the closing quote character, backslash,\n         * carriage return, line separator, paragraph separator, and line feed.\n         * Any character may appear in the form of an escape sequence.\n         */\n        return '\"' + s\n          .replace(/\\\\/g, '\\\\\\\\')            // backslash\n          .replace(/\"/g, '\\\\\"')              // closing quote character\n          .replace(/\\r/g, '\\\\r')             // carriage return\n          .replace(/\\n/g, '\\\\n')             // line feed\n          .replace(/[\\x80-\\uFFFF]/g, escape) // non-ASCII characters\n          + '\"';\n      }\n      \n      function matchFailed(failure) {\n        if (pos < rightmostMatchFailuresPos) {\n          return;\n        }\n        \n        if (pos > rightmostMatchFailuresPos) {\n          rightmostMatchFailuresPos = pos;\n          rightmostMatchFailuresExpected = [];\n        }\n        \n        rightmostMatchFailuresExpected.push(failure);\n      }\n      \n      function parse_body() {\n        var cacheKey = 'body@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var result1 = [];\n        var result3 = parse_part();\n        while (result3 !== null) {\n          result1.push(result3);\n          var result3 = parse_part();\n        }\n        var result2 = result1 !== null\n          ? (function(p) { return [\"body\"].concat(p) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_part() {\n        var cacheKey = 'part@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var result6 = parse_comment();\n        if (result6 !== null) {\n          var result0 = result6;\n        } else {\n          var result5 = parse_section();\n          if (result5 !== null) {\n            var result0 = result5;\n          } else {\n            var result4 = parse_partial();\n            if (result4 !== null) {\n              var result0 = result4;\n            } else {\n              var result3 = parse_special();\n              if (result3 !== null) {\n                var result0 = result3;\n              } else {\n                var result2 = parse_reference();\n                if (result2 !== null) {\n                  var result0 = result2;\n                } else {\n                  var result1 = parse_buffer();\n                  if (result1 !== null) {\n                    var result0 = result1;\n                  } else {\n                    var result0 = null;;\n                  };\n                };\n              };\n            };\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_section() {\n        var cacheKey = 'section@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos2 = pos;\n        var savedPos3 = pos;\n        var result10 = parse_sec_tag_start();\n        if (result10 !== null) {\n          var result11 = parse_rd();\n          if (result11 !== null) {\n            var result12 = parse_body();\n            if (result12 !== null) {\n              var result13 = parse_bodies();\n              if (result13 !== null) {\n                var result14 = parse_end_tag();\n                if (result14 !== null) {\n                  var result15 = (function() {if (!result8) return true; return result8[1].text === result12.text})() ? '' : null;\n                  if (result15 !== null) {\n                    var result8 = [result10, result11, result12, result13, result14, result15];\n                  } else {\n                    var result8 = null;\n                    pos = savedPos3;\n                  }\n                } else {\n                  var result8 = null;\n                  pos = savedPos3;\n                }\n              } else {\n                var result8 = null;\n                pos = savedPos3;\n              }\n            } else {\n              var result8 = null;\n              pos = savedPos3;\n            }\n          } else {\n            var result8 = null;\n            pos = savedPos3;\n          }\n        } else {\n          var result8 = null;\n          pos = savedPos3;\n        }\n        var result9 = result8 !== null\n          ? (function(t, b, e, n) { e.push([\"param\", [\"literal\", \"block\"], b]); t.push(e); return t })(result8[0], result8[2], result8[3], result8[4])\n          : null;\n        if (result9 !== null) {\n          var result7 = result9;\n        } else {\n          var result7 = null;\n          pos = savedPos2;\n        }\n        if (result7 !== null) {\n          var result0 = result7;\n        } else {\n          var savedPos0 = pos;\n          var savedPos1 = pos;\n          var result4 = parse_sec_tag_start();\n          if (result4 !== null) {\n            if (input.substr(pos, 1) === \"/\") {\n              var result5 = \"/\";\n              pos += 1;\n            } else {\n              var result5 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"/\\\"\");\n              }\n            }\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result2 = [result4, result5, result6];\n              } else {\n                var result2 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result2 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result2 = null;\n            pos = savedPos1;\n          }\n          var result3 = result2 !== null\n            ? (function(t) { t.push([\"bodies\"]); return t })(result2[0])\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"section\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_sec_tag_start() {\n        var cacheKey = 'sec_tag_start@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos).match(/^[#?^<+@%]/) !== null) {\n            var result4 = input.charAt(pos);\n            pos++;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"[#?^<+@%]\");\n            }\n          }\n          if (result4 !== null) {\n            var result5 = parse_identifier();\n            if (result5 !== null) {\n              var result6 = parse_context();\n              if (result6 !== null) {\n                var result7 = parse_params();\n                if (result7 !== null) {\n                  var result1 = [result3, result4, result5, result6, result7];\n                } else {\n                  var result1 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(t, n, c, p) { return [t, n, c, p] })(result1[1], result1[2], result1[3], result1[4])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_end_tag() {\n        var cacheKey = 'end_tag@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos, 1) === \"/\") {\n            var result4 = \"/\";\n            pos += 1;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"/\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var result5 = parse_identifier();\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result1 = [result3, result4, result5, result6];\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(n) { return n })(result1[2])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"end tag\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_context() {\n        var cacheKey = 'context@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        if (input.substr(pos, 1) === \":\") {\n          var result6 = \":\";\n          pos += 1;\n        } else {\n          var result6 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\":\\\"\");\n          }\n        }\n        if (result6 !== null) {\n          var result7 = parse_identifier();\n          if (result7 !== null) {\n            var result4 = [result6, result7];\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(n) {return n})(result4[1])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        var result1 = result3 !== null ? result3 : '';\n        var result2 = result1 !== null\n          ? (function(n) { return n ? [\"context\", n] : [\"context\"] })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_params() {\n        var cacheKey = 'params@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var result1 = [];\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var result6 = parse_ws();\n        if (result6 !== null) {\n          var result7 = parse_key();\n          if (result7 !== null) {\n            if (input.substr(pos, 1) === \"=\") {\n              var result8 = \"=\";\n              pos += 1;\n            } else {\n              var result8 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"=\\\"\");\n              }\n            }\n            if (result8 !== null) {\n              var result11 = parse_identifier();\n              if (result11 !== null) {\n                var result9 = result11;\n              } else {\n                var result10 = parse_inline();\n                if (result10 !== null) {\n                  var result9 = result10;\n                } else {\n                  var result9 = null;;\n                };\n              }\n              if (result9 !== null) {\n                var result4 = [result6, result7, result8, result9];\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[1], result4[3])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        while (result3 !== null) {\n          result1.push(result3);\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          var result6 = parse_ws();\n          if (result6 !== null) {\n            var result7 = parse_key();\n            if (result7 !== null) {\n              if (input.substr(pos, 1) === \"=\") {\n                var result8 = \"=\";\n                pos += 1;\n              } else {\n                var result8 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\"=\\\"\");\n                }\n              }\n              if (result8 !== null) {\n                var result11 = parse_identifier();\n                if (result11 !== null) {\n                  var result9 = result11;\n                } else {\n                  var result10 = parse_inline();\n                  if (result10 !== null) {\n                    var result9 = result10;\n                  } else {\n                    var result9 = null;;\n                  };\n                }\n                if (result9 !== null) {\n                  var result4 = [result6, result7, result8, result9];\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n          var result5 = result4 !== null\n            ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[1], result4[3])\n            : null;\n          if (result5 !== null) {\n            var result3 = result5;\n          } else {\n            var result3 = null;\n            pos = savedPos1;\n          }\n        }\n        var result2 = result1 !== null\n          ? (function(p) { return [\"params\"].concat(p) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"params\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_bodies() {\n        var cacheKey = 'bodies@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var result1 = [];\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var result6 = parse_ld();\n        if (result6 !== null) {\n          if (input.substr(pos, 1) === \":\") {\n            var result7 = \":\";\n            pos += 1;\n          } else {\n            var result7 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\":\\\"\");\n            }\n          }\n          if (result7 !== null) {\n            var result8 = parse_key();\n            if (result8 !== null) {\n              var result9 = parse_rd();\n              if (result9 !== null) {\n                var result10 = parse_body();\n                if (result10 !== null) {\n                  var result4 = [result6, result7, result8, result9, result10];\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[2], result4[4])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        while (result3 !== null) {\n          result1.push(result3);\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          var result6 = parse_ld();\n          if (result6 !== null) {\n            if (input.substr(pos, 1) === \":\") {\n              var result7 = \":\";\n              pos += 1;\n            } else {\n              var result7 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\":\\\"\");\n              }\n            }\n            if (result7 !== null) {\n              var result8 = parse_key();\n              if (result8 !== null) {\n                var result9 = parse_rd();\n                if (result9 !== null) {\n                  var result10 = parse_body();\n                  if (result10 !== null) {\n                    var result4 = [result6, result7, result8, result9, result10];\n                  } else {\n                    var result4 = null;\n                    pos = savedPos2;\n                  }\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n          var result5 = result4 !== null\n            ? (function(k, v) {return [\"param\", [\"literal\", k], v]})(result4[2], result4[4])\n            : null;\n          if (result5 !== null) {\n            var result3 = result5;\n          } else {\n            var result3 = null;\n            pos = savedPos1;\n          }\n        }\n        var result2 = result1 !== null\n          ? (function(p) { return [\"bodies\"].concat(p) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"bodies\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_reference() {\n        var cacheKey = 'reference@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          var result4 = parse_identifier();\n          if (result4 !== null) {\n            var result5 = parse_filters();\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result1 = [result3, result4, result5, result6];\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(n, f) { return [\"reference\", n, f] })(result1[1], result1[2])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"reference\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_partial() {\n        var cacheKey = 'partial@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos, 1) === \">\") {\n            var result4 = \">\";\n            pos += 1;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\">\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var savedPos2 = pos;\n            var result11 = parse_key();\n            var result12 = result11 !== null\n              ? (function(k) {return [\"literal\", k]})(result11)\n              : null;\n            if (result12 !== null) {\n              var result10 = result12;\n            } else {\n              var result10 = null;\n              pos = savedPos2;\n            }\n            if (result10 !== null) {\n              var result5 = result10;\n            } else {\n              var result9 = parse_inline();\n              if (result9 !== null) {\n                var result5 = result9;\n              } else {\n                var result5 = null;;\n              };\n            }\n            if (result5 !== null) {\n              var result6 = parse_context();\n              if (result6 !== null) {\n                if (input.substr(pos, 1) === \"/\") {\n                  var result7 = \"/\";\n                  pos += 1;\n                } else {\n                  var result7 = null;\n                  if (reportMatchFailures) {\n                    matchFailed(\"\\\"/\\\"\");\n                  }\n                }\n                if (result7 !== null) {\n                  var result8 = parse_rd();\n                  if (result8 !== null) {\n                    var result1 = [result3, result4, result5, result6, result7, result8];\n                  } else {\n                    var result1 = null;\n                    pos = savedPos1;\n                  }\n                } else {\n                  var result1 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(n, c) { return [\"partial\", n, c] })(result1[2], result1[3])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"partial\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_filters() {\n        var cacheKey = 'filters@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var result1 = [];\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        if (input.substr(pos, 1) === \"|\") {\n          var result6 = \"|\";\n          pos += 1;\n        } else {\n          var result6 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"|\\\"\");\n          }\n        }\n        if (result6 !== null) {\n          var result7 = parse_key();\n          if (result7 !== null) {\n            var result4 = [result6, result7];\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(n) {return n})(result4[1])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        while (result3 !== null) {\n          result1.push(result3);\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          if (input.substr(pos, 1) === \"|\") {\n            var result6 = \"|\";\n            pos += 1;\n          } else {\n            var result6 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"|\\\"\");\n            }\n          }\n          if (result6 !== null) {\n            var result7 = parse_key();\n            if (result7 !== null) {\n              var result4 = [result6, result7];\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n          var result5 = result4 !== null\n            ? (function(n) {return n})(result4[1])\n            : null;\n          if (result5 !== null) {\n            var result3 = result5;\n          } else {\n            var result3 = null;\n            pos = savedPos1;\n          }\n        }\n        var result2 = result1 !== null\n          ? (function(f) { return [\"filters\"].concat(f) })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"filters\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_special() {\n        var cacheKey = 'special@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos, 1) === \"~\") {\n            var result4 = \"~\";\n            pos += 1;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"~\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var result5 = parse_key();\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result1 = [result3, result4, result5, result6];\n              } else {\n                var result1 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(k) { return [\"special\", k] })(result1[2])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"special\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_identifier() {\n        var cacheKey = 'identifier@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos1 = pos;\n        var result5 = parse_path();\n        var result6 = result5 !== null\n          ? (function(p) { return wrap([\"path\"].concat(p), cacheKey) })(result5)\n          : null;\n        if (result6 !== null) {\n          var result4 = result6;\n        } else {\n          var result4 = null;\n          pos = savedPos1;\n        }\n        if (result4 !== null) {\n          var result0 = result4;\n        } else {\n          var savedPos0 = pos;\n          var result2 = parse_key();\n          var result3 = result2 !== null\n            ? (function(k) { return wrap([\"key\", k], cacheKey) })(result2)\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"identifier\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_path() {\n        var cacheKey = 'path@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var result14 = parse_key();\n        var result7 = result14 !== null ? result14 : '';\n        if (result7 !== null) {\n          var savedPos3 = pos;\n          var savedPos4 = pos;\n          if (input.substr(pos, 1) === \".\") {\n            var result12 = \".\";\n            pos += 1;\n          } else {\n            var result12 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n          if (result12 !== null) {\n            var result13 = parse_key();\n            if (result13 !== null) {\n              var result10 = [result12, result13];\n            } else {\n              var result10 = null;\n              pos = savedPos4;\n            }\n          } else {\n            var result10 = null;\n            pos = savedPos4;\n          }\n          var result11 = result10 !== null\n            ? (function(k) {return k})(result10[1])\n            : null;\n          if (result11 !== null) {\n            var result9 = result11;\n          } else {\n            var result9 = null;\n            pos = savedPos3;\n          }\n          if (result9 !== null) {\n            var result8 = [];\n            while (result9 !== null) {\n              result8.push(result9);\n              var savedPos3 = pos;\n              var savedPos4 = pos;\n              if (input.substr(pos, 1) === \".\") {\n                var result12 = \".\";\n                pos += 1;\n              } else {\n                var result12 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\".\\\"\");\n                }\n              }\n              if (result12 !== null) {\n                var result13 = parse_key();\n                if (result13 !== null) {\n                  var result10 = [result12, result13];\n                } else {\n                  var result10 = null;\n                  pos = savedPos4;\n                }\n              } else {\n                var result10 = null;\n                pos = savedPos4;\n              }\n              var result11 = result10 !== null\n                ? (function(k) {return k})(result10[1])\n                : null;\n              if (result11 !== null) {\n                var result9 = result11;\n              } else {\n                var result9 = null;\n                pos = savedPos3;\n              }\n            }\n          } else {\n            var result8 = null;\n          }\n          if (result8 !== null) {\n            var result5 = [result7, result8];\n          } else {\n            var result5 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result5 = null;\n          pos = savedPos2;\n        }\n        var result6 = result5 !== null\n          ? (function(k, d) {\n              if (k) { d.unshift(k); return [false, d]; }\n              return [true, d];\n            })(result5[0], result5[1])\n          : null;\n        if (result6 !== null) {\n          var result4 = result6;\n        } else {\n          var result4 = null;\n          pos = savedPos1;\n        }\n        if (result4 !== null) {\n          var result0 = result4;\n        } else {\n          var savedPos0 = pos;\n          if (input.substr(pos, 1) === \".\") {\n            var result2 = \".\";\n            pos += 1;\n          } else {\n            var result2 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n          var result3 = result2 !== null\n            ? (function() { return [true, []] })()\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"path\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_key() {\n        var cacheKey = 'key@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        if (input.substr(pos).match(/^[a-zA-Z_$]/) !== null) {\n          var result3 = input.charAt(pos);\n          pos++;\n        } else {\n          var result3 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"[a-zA-Z_$]\");\n          }\n        }\n        if (result3 !== null) {\n          var result4 = [];\n          if (input.substr(pos).match(/^[0-9a-zA-Z_$]/) !== null) {\n            var result5 = input.charAt(pos);\n            pos++;\n          } else {\n            var result5 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"[0-9a-zA-Z_$]\");\n            }\n          }\n          while (result5 !== null) {\n            result4.push(result5);\n            if (input.substr(pos).match(/^[0-9a-zA-Z_$]/) !== null) {\n              var result5 = input.charAt(pos);\n              pos++;\n            } else {\n              var result5 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"[0-9a-zA-Z_$]\");\n              }\n            }\n          }\n          if (result4 !== null) {\n            var result1 = [result3, result4];\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(h, t) { return h + t.join('') })(result1[0], result1[1])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"key\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_inline() {\n        var cacheKey = 'inline@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos4 = pos;\n        var savedPos5 = pos;\n        if (input.substr(pos, 1) === \"\\\"\") {\n          var result17 = \"\\\"\";\n          pos += 1;\n        } else {\n          var result17 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"\\\\\\\"\\\"\");\n          }\n        }\n        if (result17 !== null) {\n          if (input.substr(pos, 1) === \"\\\"\") {\n            var result18 = \"\\\"\";\n            pos += 1;\n          } else {\n            var result18 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"\\\\\\\"\\\"\");\n            }\n          }\n          if (result18 !== null) {\n            var result15 = [result17, result18];\n          } else {\n            var result15 = null;\n            pos = savedPos5;\n          }\n        } else {\n          var result15 = null;\n          pos = savedPos5;\n        }\n        var result16 = result15 !== null\n          ? (function() { return [\"literal\", \"\"] })()\n          : null;\n        if (result16 !== null) {\n          var result14 = result16;\n        } else {\n          var result14 = null;\n          pos = savedPos4;\n        }\n        if (result14 !== null) {\n          var result0 = result14;\n        } else {\n          var savedPos2 = pos;\n          var savedPos3 = pos;\n          if (input.substr(pos, 1) === \"\\\"\") {\n            var result11 = \"\\\"\";\n            pos += 1;\n          } else {\n            var result11 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"\\\\\\\"\\\"\");\n            }\n          }\n          if (result11 !== null) {\n            var result12 = parse_literal();\n            if (result12 !== null) {\n              if (input.substr(pos, 1) === \"\\\"\") {\n                var result13 = \"\\\"\";\n                pos += 1;\n              } else {\n                var result13 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\"\\\\\\\"\\\"\");\n                }\n              }\n              if (result13 !== null) {\n                var result9 = [result11, result12, result13];\n              } else {\n                var result9 = null;\n                pos = savedPos3;\n              }\n            } else {\n              var result9 = null;\n              pos = savedPos3;\n            }\n          } else {\n            var result9 = null;\n            pos = savedPos3;\n          }\n          var result10 = result9 !== null\n            ? (function(l) { return [\"literal\", l] })(result9[1])\n            : null;\n          if (result10 !== null) {\n            var result8 = result10;\n          } else {\n            var result8 = null;\n            pos = savedPos2;\n          }\n          if (result8 !== null) {\n            var result0 = result8;\n          } else {\n            var savedPos0 = pos;\n            var savedPos1 = pos;\n            if (input.substr(pos, 1) === \"\\\"\") {\n              var result4 = \"\\\"\";\n              pos += 1;\n            } else {\n              var result4 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"\\\\\\\"\\\"\");\n              }\n            }\n            if (result4 !== null) {\n              var result7 = parse_inline_part();\n              if (result7 !== null) {\n                var result5 = [];\n                while (result7 !== null) {\n                  result5.push(result7);\n                  var result7 = parse_inline_part();\n                }\n              } else {\n                var result5 = null;\n              }\n              if (result5 !== null) {\n                if (input.substr(pos, 1) === \"\\\"\") {\n                  var result6 = \"\\\"\";\n                  pos += 1;\n                } else {\n                  var result6 = null;\n                  if (reportMatchFailures) {\n                    matchFailed(\"\\\"\\\\\\\"\\\"\");\n                  }\n                }\n                if (result6 !== null) {\n                  var result2 = [result4, result5, result6];\n                } else {\n                  var result2 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result2 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result2 = null;\n              pos = savedPos1;\n            }\n            var result3 = result2 !== null\n              ? (function(p) { return [\"body\"].concat(p) })(result2[1])\n              : null;\n            if (result3 !== null) {\n              var result1 = result3;\n            } else {\n              var result1 = null;\n              pos = savedPos0;\n            }\n            if (result1 !== null) {\n              var result0 = result1;\n            } else {\n              var result0 = null;;\n            };\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"inline\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_inline_part() {\n        var cacheKey = 'inline_part@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var result5 = parse_special();\n        if (result5 !== null) {\n          var result0 = result5;\n        } else {\n          var result4 = parse_reference();\n          if (result4 !== null) {\n            var result0 = result4;\n          } else {\n            var savedPos0 = pos;\n            var result2 = parse_literal();\n            var result3 = result2 !== null\n              ? (function(l) { return [\"buffer\", l] })(result2)\n              : null;\n            if (result3 !== null) {\n              var result1 = result3;\n            } else {\n              var result1 = null;\n              pos = savedPos0;\n            }\n            if (result1 !== null) {\n              var result0 = result1;\n            } else {\n              var result0 = null;;\n            };\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_buffer() {\n        var cacheKey = 'buffer@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos6 = pos;\n        var savedPos7 = pos;\n        var result17 = parse_eol();\n        if (result17 !== null) {\n          var result18 = [];\n          var result19 = parse_ws();\n          while (result19 !== null) {\n            result18.push(result19);\n            var result19 = parse_ws();\n          }\n          if (result18 !== null) {\n            var result15 = [result17, result18];\n          } else {\n            var result15 = null;\n            pos = savedPos7;\n          }\n        } else {\n          var result15 = null;\n          pos = savedPos7;\n        }\n        var result16 = result15 !== null\n          ? (function(e, w) { return [\"format\", e, w.join('')] })(result15[0], result15[1])\n          : null;\n        if (result16 !== null) {\n          var result14 = result16;\n        } else {\n          var result14 = null;\n          pos = savedPos6;\n        }\n        if (result14 !== null) {\n          var result0 = result14;\n        } else {\n          var savedPos0 = pos;\n          var savedPos1 = pos;\n          var savedPos2 = pos;\n          var savedPos5 = pos;\n          var savedReportMatchFailuresVar2 = reportMatchFailures;\n          reportMatchFailures = false;\n          var result13 = parse_tag();\n          reportMatchFailures = savedReportMatchFailuresVar2;\n          if (result13 === null) {\n            var result7 = '';\n          } else {\n            var result7 = null;\n            pos = savedPos5;\n          }\n          if (result7 !== null) {\n            var savedPos4 = pos;\n            var savedReportMatchFailuresVar1 = reportMatchFailures;\n            reportMatchFailures = false;\n            var result12 = parse_eol();\n            reportMatchFailures = savedReportMatchFailuresVar1;\n            if (result12 === null) {\n              var result8 = '';\n            } else {\n              var result8 = null;\n              pos = savedPos4;\n            }\n            if (result8 !== null) {\n              var savedPos3 = pos;\n              var savedReportMatchFailuresVar0 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result11 = parse_comment();\n              reportMatchFailures = savedReportMatchFailuresVar0;\n              if (result11 === null) {\n                var result9 = '';\n              } else {\n                var result9 = null;\n                pos = savedPos3;\n              }\n              if (result9 !== null) {\n                if (input.length > pos) {\n                  var result10 = input.charAt(pos);\n                  pos++;\n                } else {\n                  var result10 = null;\n                  if (reportMatchFailures) {\n                    matchFailed('any character');\n                  }\n                }\n                if (result10 !== null) {\n                  var result5 = [result7, result8, result9, result10];\n                } else {\n                  var result5 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result5 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result5 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result5 = null;\n            pos = savedPos2;\n          }\n          var result6 = result5 !== null\n            ? (function(c) {return c})(result5[3])\n            : null;\n          if (result6 !== null) {\n            var result4 = result6;\n          } else {\n            var result4 = null;\n            pos = savedPos1;\n          }\n          if (result4 !== null) {\n            var result2 = [];\n            while (result4 !== null) {\n              result2.push(result4);\n              var savedPos1 = pos;\n              var savedPos2 = pos;\n              var savedPos5 = pos;\n              var savedReportMatchFailuresVar2 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result13 = parse_tag();\n              reportMatchFailures = savedReportMatchFailuresVar2;\n              if (result13 === null) {\n                var result7 = '';\n              } else {\n                var result7 = null;\n                pos = savedPos5;\n              }\n              if (result7 !== null) {\n                var savedPos4 = pos;\n                var savedReportMatchFailuresVar1 = reportMatchFailures;\n                reportMatchFailures = false;\n                var result12 = parse_eol();\n                reportMatchFailures = savedReportMatchFailuresVar1;\n                if (result12 === null) {\n                  var result8 = '';\n                } else {\n                  var result8 = null;\n                  pos = savedPos4;\n                }\n                if (result8 !== null) {\n                  var savedPos3 = pos;\n                  var savedReportMatchFailuresVar0 = reportMatchFailures;\n                  reportMatchFailures = false;\n                  var result11 = parse_comment();\n                  reportMatchFailures = savedReportMatchFailuresVar0;\n                  if (result11 === null) {\n                    var result9 = '';\n                  } else {\n                    var result9 = null;\n                    pos = savedPos3;\n                  }\n                  if (result9 !== null) {\n                    if (input.length > pos) {\n                      var result10 = input.charAt(pos);\n                      pos++;\n                    } else {\n                      var result10 = null;\n                      if (reportMatchFailures) {\n                        matchFailed('any character');\n                      }\n                    }\n                    if (result10 !== null) {\n                      var result5 = [result7, result8, result9, result10];\n                    } else {\n                      var result5 = null;\n                      pos = savedPos2;\n                    }\n                  } else {\n                    var result5 = null;\n                    pos = savedPos2;\n                  }\n                } else {\n                  var result5 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result5 = null;\n                pos = savedPos2;\n              }\n              var result6 = result5 !== null\n                ? (function(c) {return c})(result5[3])\n                : null;\n              if (result6 !== null) {\n                var result4 = result6;\n              } else {\n                var result4 = null;\n                pos = savedPos1;\n              }\n            }\n          } else {\n            var result2 = null;\n          }\n          var result3 = result2 !== null\n            ? (function(b) { return [\"buffer\", b.join('')] })(result2)\n            : null;\n          if (result3 !== null) {\n            var result1 = result3;\n          } else {\n            var result1 = null;\n            pos = savedPos0;\n          }\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"buffer\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_literal() {\n        var cacheKey = 'literal@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        var savedPos2 = pos;\n        var savedPos4 = pos;\n        var savedReportMatchFailuresVar1 = reportMatchFailures;\n        reportMatchFailures = false;\n        var result12 = parse_tag();\n        reportMatchFailures = savedReportMatchFailuresVar1;\n        if (result12 === null) {\n          var result6 = '';\n        } else {\n          var result6 = null;\n          pos = savedPos4;\n        }\n        if (result6 !== null) {\n          var savedPos3 = pos;\n          var savedReportMatchFailuresVar0 = reportMatchFailures;\n          reportMatchFailures = false;\n          var result11 = parse_eol();\n          reportMatchFailures = savedReportMatchFailuresVar0;\n          if (result11 === null) {\n            var result7 = '';\n          } else {\n            var result7 = null;\n            pos = savedPos3;\n          }\n          if (result7 !== null) {\n            var result10 = parse_esc();\n            if (result10 !== null) {\n              var result8 = result10;\n            } else {\n              if (input.substr(pos).match(/^[^\"]/) !== null) {\n                var result9 = input.charAt(pos);\n                pos++;\n              } else {\n                var result9 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"[^\\\"]\");\n                }\n              }\n              if (result9 !== null) {\n                var result8 = result9;\n              } else {\n                var result8 = null;;\n              };\n            }\n            if (result8 !== null) {\n              var result4 = [result6, result7, result8];\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n          } else {\n            var result4 = null;\n            pos = savedPos2;\n          }\n        } else {\n          var result4 = null;\n          pos = savedPos2;\n        }\n        var result5 = result4 !== null\n          ? (function(c) {return c})(result4[2])\n          : null;\n        if (result5 !== null) {\n          var result3 = result5;\n        } else {\n          var result3 = null;\n          pos = savedPos1;\n        }\n        if (result3 !== null) {\n          var result1 = [];\n          while (result3 !== null) {\n            result1.push(result3);\n            var savedPos1 = pos;\n            var savedPos2 = pos;\n            var savedPos4 = pos;\n            var savedReportMatchFailuresVar1 = reportMatchFailures;\n            reportMatchFailures = false;\n            var result12 = parse_tag();\n            reportMatchFailures = savedReportMatchFailuresVar1;\n            if (result12 === null) {\n              var result6 = '';\n            } else {\n              var result6 = null;\n              pos = savedPos4;\n            }\n            if (result6 !== null) {\n              var savedPos3 = pos;\n              var savedReportMatchFailuresVar0 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result11 = parse_eol();\n              reportMatchFailures = savedReportMatchFailuresVar0;\n              if (result11 === null) {\n                var result7 = '';\n              } else {\n                var result7 = null;\n                pos = savedPos3;\n              }\n              if (result7 !== null) {\n                var result10 = parse_esc();\n                if (result10 !== null) {\n                  var result8 = result10;\n                } else {\n                  if (input.substr(pos).match(/^[^\"]/) !== null) {\n                    var result9 = input.charAt(pos);\n                    pos++;\n                  } else {\n                    var result9 = null;\n                    if (reportMatchFailures) {\n                      matchFailed(\"[^\\\"]\");\n                    }\n                  }\n                  if (result9 !== null) {\n                    var result8 = result9;\n                  } else {\n                    var result8 = null;;\n                  };\n                }\n                if (result8 !== null) {\n                  var result4 = [result6, result7, result8];\n                } else {\n                  var result4 = null;\n                  pos = savedPos2;\n                }\n              } else {\n                var result4 = null;\n                pos = savedPos2;\n              }\n            } else {\n              var result4 = null;\n              pos = savedPos2;\n            }\n            var result5 = result4 !== null\n              ? (function(c) {return c})(result4[2])\n              : null;\n            if (result5 !== null) {\n              var result3 = result5;\n            } else {\n              var result3 = null;\n              pos = savedPos1;\n            }\n          }\n        } else {\n          var result1 = null;\n        }\n        var result2 = result1 !== null\n          ? (function(b) { return b.join('') })(result1)\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"literal\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_esc() {\n        var cacheKey = 'esc@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        if (input.substr(pos, 2) === \"\\\\\\\"\") {\n          var result1 = \"\\\\\\\"\";\n          pos += 2;\n        } else {\n          var result1 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"\\\\\\\\\\\\\\\"\\\"\");\n          }\n        }\n        var result2 = result1 !== null\n          ? (function() { return '\"' })()\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_comment() {\n        var cacheKey = 'comment@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var savedReportMatchFailures = reportMatchFailures;\n        reportMatchFailures = false;\n        var savedPos0 = pos;\n        var savedPos1 = pos;\n        if (input.substr(pos, 2) === \"{!\") {\n          var result3 = \"{!\";\n          pos += 2;\n        } else {\n          var result3 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"{!\\\"\");\n          }\n        }\n        if (result3 !== null) {\n          var result4 = [];\n          var savedPos2 = pos;\n          var savedPos3 = pos;\n          var savedPos4 = pos;\n          var savedReportMatchFailuresVar0 = reportMatchFailures;\n          reportMatchFailures = false;\n          if (input.substr(pos, 2) === \"!}\") {\n            var result11 = \"!}\";\n            pos += 2;\n          } else {\n            var result11 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"!}\\\"\");\n            }\n          }\n          reportMatchFailures = savedReportMatchFailuresVar0;\n          if (result11 === null) {\n            var result9 = '';\n          } else {\n            var result9 = null;\n            pos = savedPos4;\n          }\n          if (result9 !== null) {\n            if (input.length > pos) {\n              var result10 = input.charAt(pos);\n              pos++;\n            } else {\n              var result10 = null;\n              if (reportMatchFailures) {\n                matchFailed('any character');\n              }\n            }\n            if (result10 !== null) {\n              var result7 = [result9, result10];\n            } else {\n              var result7 = null;\n              pos = savedPos3;\n            }\n          } else {\n            var result7 = null;\n            pos = savedPos3;\n          }\n          var result8 = result7 !== null\n            ? (function(c) {return c})(result7[1])\n            : null;\n          if (result8 !== null) {\n            var result6 = result8;\n          } else {\n            var result6 = null;\n            pos = savedPos2;\n          }\n          while (result6 !== null) {\n            result4.push(result6);\n            var savedPos2 = pos;\n            var savedPos3 = pos;\n            var savedPos4 = pos;\n            var savedReportMatchFailuresVar0 = reportMatchFailures;\n            reportMatchFailures = false;\n            if (input.substr(pos, 2) === \"!}\") {\n              var result11 = \"!}\";\n              pos += 2;\n            } else {\n              var result11 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"!}\\\"\");\n              }\n            }\n            reportMatchFailures = savedReportMatchFailuresVar0;\n            if (result11 === null) {\n              var result9 = '';\n            } else {\n              var result9 = null;\n              pos = savedPos4;\n            }\n            if (result9 !== null) {\n              if (input.length > pos) {\n                var result10 = input.charAt(pos);\n                pos++;\n              } else {\n                var result10 = null;\n                if (reportMatchFailures) {\n                  matchFailed('any character');\n                }\n              }\n              if (result10 !== null) {\n                var result7 = [result9, result10];\n              } else {\n                var result7 = null;\n                pos = savedPos3;\n              }\n            } else {\n              var result7 = null;\n              pos = savedPos3;\n            }\n            var result8 = result7 !== null\n              ? (function(c) {return c})(result7[1])\n              : null;\n            if (result8 !== null) {\n              var result6 = result8;\n            } else {\n              var result6 = null;\n              pos = savedPos2;\n            }\n          }\n          if (result4 !== null) {\n            if (input.substr(pos, 2) === \"!}\") {\n              var result5 = \"!}\";\n              pos += 2;\n            } else {\n              var result5 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"!}\\\"\");\n              }\n            }\n            if (result5 !== null) {\n              var result1 = [result3, result4, result5];\n            } else {\n              var result1 = null;\n              pos = savedPos1;\n            }\n          } else {\n            var result1 = null;\n            pos = savedPos1;\n          }\n        } else {\n          var result1 = null;\n          pos = savedPos1;\n        }\n        var result2 = result1 !== null\n          ? (function(c) { return [\"comment\", c.join('')] })(result1[1])\n          : null;\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result0 = null;\n          pos = savedPos0;\n        }\n        reportMatchFailures = savedReportMatchFailures;\n        if (reportMatchFailures && result0 === null) {\n          matchFailed(\"comment\");\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_tag() {\n        var cacheKey = 'tag@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        var savedPos0 = pos;\n        var result3 = parse_ld();\n        if (result3 !== null) {\n          if (input.substr(pos).match(/^[#?^><+%:@\\/~%]/) !== null) {\n            var result4 = input.charAt(pos);\n            pos++;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"[#?^><+%:@\\\\/~%]\");\n            }\n          }\n          if (result4 !== null) {\n            var savedPos1 = pos;\n            var savedPos3 = pos;\n            var savedReportMatchFailuresVar1 = reportMatchFailures;\n            reportMatchFailures = false;\n            var result12 = parse_rd();\n            reportMatchFailures = savedReportMatchFailuresVar1;\n            if (result12 === null) {\n              var result8 = '';\n            } else {\n              var result8 = null;\n              pos = savedPos3;\n            }\n            if (result8 !== null) {\n              var savedPos2 = pos;\n              var savedReportMatchFailuresVar0 = reportMatchFailures;\n              reportMatchFailures = false;\n              var result11 = parse_eol();\n              reportMatchFailures = savedReportMatchFailuresVar0;\n              if (result11 === null) {\n                var result9 = '';\n              } else {\n                var result9 = null;\n                pos = savedPos2;\n              }\n              if (result9 !== null) {\n                if (input.length > pos) {\n                  var result10 = input.charAt(pos);\n                  pos++;\n                } else {\n                  var result10 = null;\n                  if (reportMatchFailures) {\n                    matchFailed('any character');\n                  }\n                }\n                if (result10 !== null) {\n                  var result7 = [result8, result9, result10];\n                } else {\n                  var result7 = null;\n                  pos = savedPos1;\n                }\n              } else {\n                var result7 = null;\n                pos = savedPos1;\n              }\n            } else {\n              var result7 = null;\n              pos = savedPos1;\n            }\n            if (result7 !== null) {\n              var result5 = [];\n              while (result7 !== null) {\n                result5.push(result7);\n                var savedPos1 = pos;\n                var savedPos3 = pos;\n                var savedReportMatchFailuresVar1 = reportMatchFailures;\n                reportMatchFailures = false;\n                var result12 = parse_rd();\n                reportMatchFailures = savedReportMatchFailuresVar1;\n                if (result12 === null) {\n                  var result8 = '';\n                } else {\n                  var result8 = null;\n                  pos = savedPos3;\n                }\n                if (result8 !== null) {\n                  var savedPos2 = pos;\n                  var savedReportMatchFailuresVar0 = reportMatchFailures;\n                  reportMatchFailures = false;\n                  var result11 = parse_eol();\n                  reportMatchFailures = savedReportMatchFailuresVar0;\n                  if (result11 === null) {\n                    var result9 = '';\n                  } else {\n                    var result9 = null;\n                    pos = savedPos2;\n                  }\n                  if (result9 !== null) {\n                    if (input.length > pos) {\n                      var result10 = input.charAt(pos);\n                      pos++;\n                    } else {\n                      var result10 = null;\n                      if (reportMatchFailures) {\n                        matchFailed('any character');\n                      }\n                    }\n                    if (result10 !== null) {\n                      var result7 = [result8, result9, result10];\n                    } else {\n                      var result7 = null;\n                      pos = savedPos1;\n                    }\n                  } else {\n                    var result7 = null;\n                    pos = savedPos1;\n                  }\n                } else {\n                  var result7 = null;\n                  pos = savedPos1;\n                }\n              }\n            } else {\n              var result5 = null;\n            }\n            if (result5 !== null) {\n              var result6 = parse_rd();\n              if (result6 !== null) {\n                var result2 = [result3, result4, result5, result6];\n              } else {\n                var result2 = null;\n                pos = savedPos0;\n              }\n            } else {\n              var result2 = null;\n              pos = savedPos0;\n            }\n          } else {\n            var result2 = null;\n            pos = savedPos0;\n          }\n        } else {\n          var result2 = null;\n          pos = savedPos0;\n        }\n        if (result2 !== null) {\n          var result0 = result2;\n        } else {\n          var result1 = parse_reference();\n          if (result1 !== null) {\n            var result0 = result1;\n          } else {\n            var result0 = null;;\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_ld() {\n        var cacheKey = 'ld@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos, 1) === \"{\") {\n          var result0 = \"{\";\n          pos += 1;\n        } else {\n          var result0 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"{\\\"\");\n          }\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_rd() {\n        var cacheKey = 'rd@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos, 1) === \"}\") {\n          var result0 = \"}\";\n          pos += 1;\n        } else {\n          var result0 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"}\\\"\");\n          }\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_eol() {\n        var cacheKey = 'eol@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos, 1) === \"\\n\") {\n          var result5 = \"\\n\";\n          pos += 1;\n        } else {\n          var result5 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"\\\"\\\\n\\\"\");\n          }\n        }\n        if (result5 !== null) {\n          var result0 = result5;\n        } else {\n          if (input.substr(pos, 2) === \"\\r\\n\") {\n            var result4 = \"\\r\\n\";\n            pos += 2;\n          } else {\n            var result4 = null;\n            if (reportMatchFailures) {\n              matchFailed(\"\\\"\\\\r\\\\n\\\"\");\n            }\n          }\n          if (result4 !== null) {\n            var result0 = result4;\n          } else {\n            if (input.substr(pos, 1) === \"\\r\") {\n              var result3 = \"\\r\";\n              pos += 1;\n            } else {\n              var result3 = null;\n              if (reportMatchFailures) {\n                matchFailed(\"\\\"\\\\r\\\"\");\n              }\n            }\n            if (result3 !== null) {\n              var result0 = result3;\n            } else {\n              if (input.substr(pos, 1) === \"\\u2028\") {\n                var result2 = \"\\u2028\";\n                pos += 1;\n              } else {\n                var result2 = null;\n                if (reportMatchFailures) {\n                  matchFailed(\"\\\"\\\\u2028\\\"\");\n                }\n              }\n              if (result2 !== null) {\n                var result0 = result2;\n              } else {\n                if (input.substr(pos, 1) === \"\\u2029\") {\n                  var result1 = \"\\u2029\";\n                  pos += 1;\n                } else {\n                  var result1 = null;\n                  if (reportMatchFailures) {\n                    matchFailed(\"\\\"\\\\u2029\\\"\");\n                  }\n                }\n                if (result1 !== null) {\n                  var result0 = result1;\n                } else {\n                  var result0 = null;;\n                };\n              };\n            };\n          };\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_ws() {\n        var cacheKey = 'ws@' + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        \n        if (input.substr(pos).match(/^[\t\u000b\f \\xA0\\uFEFF]/) !== null) {\n          var result0 = input.charAt(pos);\n          pos++;\n        } else {\n          var result0 = null;\n          if (reportMatchFailures) {\n            matchFailed(\"[\t\u000b\f \\\\xA0\\\\uFEFF]\");\n          }\n        }\n        \n        \n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function buildErrorMessage() {\n        function buildExpected(failuresExpected) {\n          failuresExpected.sort();\n          \n          var lastFailure = null;\n          var failuresExpectedUnique = [];\n          for (var i = 0; i < failuresExpected.length; i++) {\n            if (failuresExpected[i] !== lastFailure) {\n              failuresExpectedUnique.push(failuresExpected[i]);\n              lastFailure = failuresExpected[i];\n            }\n          }\n          \n          switch (failuresExpectedUnique.length) {\n            case 0:\n              return 'end of input';\n            case 1:\n              return failuresExpectedUnique[0];\n            default:\n              return failuresExpectedUnique.slice(0, failuresExpectedUnique.length - 1).join(', ')\n                + ' or '\n                + failuresExpectedUnique[failuresExpectedUnique.length - 1];\n          }\n        }\n        \n        var expected = buildExpected(rightmostMatchFailuresExpected);\n        var actualPos = Math.max(pos, rightmostMatchFailuresPos);\n        var actual = actualPos < input.length\n          ? quote(input.charAt(actualPos))\n          : 'end of input';\n        \n        return 'Expected ' + expected + ' but ' + actual + ' found.';\n      }\n      \n      function computeErrorPosition() {\n        /*\n         * The first idea was to use |String.split| to break the input up to the\n         * error position along newlines and derive the line and column from\n         * there. However IE's |split| implementation is so broken that it was\n         * enough to prevent it.\n         */\n        \n        var line = 1;\n        var column = 1;\n        var seenCR = false;\n        \n        for (var i = 0; i <  rightmostMatchFailuresPos; i++) {\n          var ch = input.charAt(i);\n          if (ch === '\\n') {\n            if (!seenCR) { line++; }\n            column = 1;\n            seenCR = false;\n          } else if (ch === '\\r' | ch === '\\u2028' || ch === '\\u2029') {\n            line++;\n            column = 1;\n            seenCR = true;\n          } else {\n            column++;\n            seenCR = false;\n          }\n        }\n        \n        return { line: line, column: column };\n      }\n      \n      \n      \n    function wrap(node, ck) {\n      \n      node['text'] = input.substring(ck.split('@')[1], pos);\n      \n      return node;\n      \n    }\n      \n  \n      \n      var result = parseFunctions[startRule]();\n      \n      /*\n       * The parser is now in one of the following three states:\n       *\n       * 1. The parser successfully parsed the whole input.\n       *\n       *    - |result !== null|\n       *    - |pos === input.length|\n       *    - |rightmostMatchFailuresExpected| may or may not contain something\n       *\n       * 2. The parser successfully parsed only a part of the input.\n       *\n       *    - |result !== null|\n       *    - |pos < input.length|\n       *    - |rightmostMatchFailuresExpected| may or may not contain something\n       *\n       * 3. The parser did not successfully parse any part of the input.\n       *\n       *   - |result === null|\n       *   - |pos === 0|\n       *   - |rightmostMatchFailuresExpected| contains at least one failure\n       *\n       * All code following this comment (including called functions) must\n       * handle these states.\n       */\n      if (result === null || pos !== input.length) {\n        var errorPosition = computeErrorPosition();\n        throw new parser.SyntaxError(\n          buildErrorMessage(),\n          errorPosition.line,\n          errorPosition.column\n        );\n      }\n      \n      return result;\n    },\n    \n    /* Returns the parser source code. */\n    toSource: function() { return this._source; }\n  };\n  \n  /* Thrown when a parser encounters a syntax error. */\n  \n  result.SyntaxError = function(message, line, column) {\n    this.name = 'SyntaxError';\n    this.message = message;\n    this.line = line;\n    this.column = column;\n  };\n  \n  result.SyntaxError.prototype = Error.prototype;\n  \n  return result;\n})();\n\ndust.parse = parser.parse;\n\n})(typeof exports !== 'undefined' ? exports : window.dust);\n//@ sourceURL=/node_modules/dustjs-linkedin/lib/parser.js"
));

require.define("/node_modules/dustjs-linkedin/lib/compiler.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "(function(dust) {\n\ndust.compile = function(source, name) {\n  try {\n    var ast = filterAST(dust.parse(source));\n    return compile(ast, name);\n  }\n  catch(err)\n  {\n    if(!err.line || !err.column) throw err;    \n    throw new SyntaxError(err.message + \" At line : \" + err.line + \", column : \" + err.column);\n  }\n};\n\nfunction filterAST(ast) {\n  var context = {};\n  return dust.filterNode(context, ast);\n}\n\ndust.filterNode = function(context, node) {\n  return dust.optimizers[node[0]](context, node);\n}\n\ndust.optimizers = {\n  body:      compactBuffers,\n  buffer:    noop,\n  special:   convertSpecial,\n  format:    nullify,        // TODO: convert format\n  reference: visit,\n  \"#\":       visit,\n  \"?\":       visit,\n  \"^\":       visit,\n  \"<\":       visit,\n  \"+\":       visit,\n  \"@\":       visit,\n  \"%\":       visit,\n  partial:   visit,\n  context:   visit,\n  params:    visit,\n  bodies:    visit,\n  param:     visit,\n  filters:   noop,\n  key:       noop,\n  path:      noop,\n  literal:   noop,\n  comment:   nullify\n}\n\ndust.pragmas = {\n  esc: function(compiler, context, bodies, params) {\n    var old = compiler.auto;\n    if (!context) context = 'h';\n    compiler.auto = (context === 's') ? '' : context;\n    var out = compileParts(compiler, bodies.block);\n    compiler.auto = old;\n    return out;\n  }\n}\n\nfunction visit(context, node) {\n  var out = [node[0]];\n  for (var i=1, len=node.length; i<len; i++) {\n    var res = dust.filterNode(context, node[i]);\n    if (res) out.push(res);\n  }\n  return out;\n}\n\n// Compacts consecutive buffer nodes into a single node\nfunction compactBuffers(context, node) {\n  var out = [node[0]], memo;\n  for (var i=1, len=node.length; i<len; i++) {\n    var res = dust.filterNode(context, node[i]);\n    if (res) {\n      if (res[0] === 'buffer') {\n        if (memo) {\n          memo[1] += res[1];\n        } else {\n          memo = res;\n          out.push(res);\n        }\n      } else {\n        memo = null;\n        out.push(res);\n      }\n    }\n  }\n  return out;\n}\n\nvar specialChars = {\n  \"s\": \" \",\n  \"n\": \"\\n\",\n  \"r\": \"\\r\",\n  \"lb\": \"{\",\n  \"rb\": \"}\"\n};\n\nfunction convertSpecial(context, node) { return ['buffer', specialChars[node[1]]] }\nfunction noop(context, node) { return node }\nfunction nullify(){}\n\nfunction compile(ast, name) {\n  var context = {\n    name: name,\n    bodies: [],\n    blocks: {},\n    index: 0,\n    auto: \"h\"\n  }\n\n  return \"(function(){dust.register(\"\n    + (name ? \"\\\"\" + name + \"\\\"\" : \"null\") + \",\"\n    + dust.compileNode(context, ast)\n    + \");\"\n    + compileBlocks(context)\n    + compileBodies(context)\n    + \"return body_0;\"\n    + \"})();\";\n}\n\nfunction compileBlocks(context) {\n  var out = [],\n      blocks = context.blocks;\n\n  for (var name in blocks) {\n    out.push(name + \":\" + blocks[name]);\n  }\n  if (out.length) {\n    context.blocks = \"ctx=ctx.shiftBlocks(blocks);\";\n    return \"var blocks={\" + out.join(',') + \"};\";\n  }\n  return context.blocks = \"\";\n}\n\nfunction compileBodies(context) {\n  var out = [],\n      bodies = context.bodies,\n      blx = context.blocks;\n\n  for (var i=0, len=bodies.length; i<len; i++) {\n    out[i] = \"function body_\" + i + \"(chk,ctx){\"\n      + blx + \"return chk\" + bodies[i] + \";}\";\n  }\n  return out.join('');\n}\n\nfunction compileParts(context, body) {\n  var parts = '';\n  for (var i=1, len=body.length; i<len; i++) {\n    parts += dust.compileNode(context, body[i]);\n  }\n  return parts;\n}\n\ndust.compileNode = function(context, node) {\n  return dust.nodes[node[0]](context, node);\n}\n\ndust.nodes = {\n  body: function(context, node) {\n    var id = context.index++, name = \"body_\" + id;\n    context.bodies[id] = compileParts(context, node);\n    return name;\n  },\n\n  buffer: function(context, node) {\n    return \".write(\" + escape(node[1]) + \")\";\n  },\n\n  format: function(context, node) {\n    return \".write(\" + escape(node[1] + node[2]) + \")\";\n  },\n\n  reference: function(context, node) {\n    return \".reference(\" + dust.compileNode(context, node[1])\n      + \",ctx,\" + dust.compileNode(context, node[2]) + \")\";\n  },\n\n  \"#\": function(context, node) {\n    return compileSection(context, node, \"section\");\n  },\n\n  \"?\": function(context, node) {\n    return compileSection(context, node, \"exists\");\n  },\n\n  \"^\": function(context, node) {\n    return compileSection(context, node, \"notexists\");\n  },\n\n  \"<\": function(context, node) {\n    var bodies = node[4];\n    for (var i=1, len=bodies.length; i<len; i++) {\n      var param = bodies[i],\n          type = param[1][1];\n      if (type === \"block\") {\n        context.blocks[node[1].text] = dust.compileNode(context, param[2]);\n        return '';\n      }\n    }\n    return '';\n  },\n\n  \"+\": function(context, node) {\n    return \".block(ctx.getBlock(\"\n      + escape(node[1].text)\n      + \"),\" + dust.compileNode(context, node[2]) + \",\"\n      + dust.compileNode(context, node[4]) + \",\"\n      + dust.compileNode(context, node[3])\n      + \")\";\n  },\n\n  \"@\": function(context, node) {\n    return \".helper(\"\n      + escape(node[1].text)\n      + \",\" + dust.compileNode(context, node[2]) + \",\"\n      + dust.compileNode(context, node[4]) + \",\"\n      + dust.compileNode(context, node[3])\n      + \")\";\n  },\n\n  \"%\": function(context, node) {\n    // TODO: Move these hacks into pragma precompiler\n    var name = node[1][1];\n    if (!dust.pragmas[name]) return '';\n\n    var rawBodies = node[4];\n    var bodies = {};\n    for (var i=1, len=rawBodies.length; i<len; i++) {\n      var b = rawBodies[i];\n      bodies[b[1][1]] = b[2];\n    }\n\n    var rawParams = node[3];\n    var params = {};\n    for (var i=1, len=rawParams.length; i<len; i++) {\n      var p = rawParams[i];\n      params[p[1][1]] = p[2][1];\n    }\n\n    var ctx = node[2][1] ? node[2][1].text : null;\n\n    return dust.pragmas[name](context, ctx, bodies, params);\n  },\n\n  partial: function(context, node) {\n    return \".partial(\"\n      + dust.compileNode(context, node[1])\n      + \",\" + dust.compileNode(context, node[2]) + \")\";\n  },\n\n  context: function(context, node) {\n    if (node[1]) {\n      return \"ctx.rebase(\" + dust.compileNode(context, node[1]) + \")\";\n    }\n    return \"ctx\";\n  },\n\n  params: function(context, node) {\n    var out = [];\n    for (var i=1, len=node.length; i<len; i++) {\n      out.push(dust.compileNode(context, node[i]));\n    }\n    if (out.length) {\n      return \"{\" + out.join(',') + \"}\";\n    }\n    return \"null\";\n  },\n\n  bodies: function(context, node) {\n    var out = [];\n    for (var i=1, len=node.length; i<len; i++) {\n      out.push(dust.compileNode(context, node[i]));\n    }\n    return \"{\" + out.join(',') + \"}\";\n  },\n\n  param: function(context, node) {\n    return dust.compileNode(context, node[1]) + \":\" + dust.compileNode(context, node[2]);\n  },\n\n  filters: function(context, node) {\n    var list = [];\n    for (var i=1, len=node.length; i<len; i++) {\n      var filter = node[i];\n      list.push(\"\\\"\" + filter + \"\\\"\");\n    }\n    return \"\\\"\" + context.auto + \"\\\"\"\n      + (list.length ? \",[\" + list.join(',') + \"]\" : '');\n  },\n\n  key: function(context, node) {\n    return \"ctx.get(\\\"\" + node[1] + \"\\\")\";\n  },\n\n  path: function(context, node) {\n    var current = node[1],\n        keys = node[2],\n        list = [];\n\n    for (var i=0,len=keys.length; i<len; i++) {\n      list.push(\"\\\"\" + keys[i] + \"\\\"\");\n    }\n    return \"ctx.getPath(\" + current + \",[\" + list.join(',') + \"])\";\n  },\n\n  literal: function(context, node) {\n    return escape(node[1]);\n  }\n}\n\nfunction compileSection(context, node, cmd) {\n  return \".\" + cmd + \"(\"\n    + dust.compileNode(context, node[1])\n    + \",\" + dust.compileNode(context, node[2]) + \",\"\n    + dust.compileNode(context, node[4]) + \",\"\n    + dust.compileNode(context, node[3])\n    + \")\";\n}\n\nvar escape = (typeof JSON === \"undefined\")\n  ? function(str) { return \"\\\"\" + dust.escapeJs(str) + \"\\\"\" }\n  : JSON.stringify;\n\n})(typeof exports !== 'undefined' ? exports : window.dust);\n\n//@ sourceURL=/node_modules/dustjs-linkedin/lib/compiler.js"
));

require.define("vm", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = require(\"vm-browserify\")\n//@ sourceURL=vm"
));

require.define("/node_modules/vm-browserify/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"index.js\"}\n//@ sourceURL=/node_modules/vm-browserify/package.json"
));

require.define("/node_modules/vm-browserify/index.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInNewContext = function (context) {\n    if (!context) context = {};\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n     \n    if (!win.eval && win.execScript) {\n        // win.eval() magically appears when this is called in IE:\n        win.execScript('null');\n    }\n    \n    var res = win.eval(this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        context[key] = win[key];\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInContext = function (context) {\n    // seems to be just runInNewContext on magical context objects which are\n    // otherwise indistinguishable from objects except plain old objects\n    // for the parameter segfaults node\n    return this.runInNewContext(context);\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    // not really sure what this one does\n    // seems to just make a shallow copy\n    var copy = {};\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n\n//@ sourceURL=/node_modules/vm-browserify/index.js"
));

require.define("/node_modules/fragment/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {}\n//@ sourceURL=/node_modules/fragment/package.json"
));

require.define("/node_modules/fragment/index.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = Fragment\n\nfunction Fragment(html) {\n    var div = document.createElement(\"div\"),\n        args = arguments,\n        i = 1,\n        fragment = document.createDocumentFragment()\n\n    div.innerHTML = html.replace(/%s/g, function(){\n        return String(args[i++])\n    })\n\n    while (div.hasChildNodes()) {\n        fragment.appendChild(div.firstChild)\n    }\n\n    return fragment\n}\n//@ sourceURL=/node_modules/fragment/index.js"
));

require.define("/browser.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "window.nCore = require(\"./core\")\n//@ sourceURL=/browser.js"
));
require("/browser.js");

require.define("/dummy.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "(function () { \nvar Core = Object.create(nCore).constructor()\ndelete window.nCore \nCore.use('client.app', require('./client/app.js')) \nCore.use('client.routes.players', require('./client/routes/players.js')) \nCore.use('client.views.players', require('./client/views/players.js')) \nCore.use('client.utils.view', require('./client/utils/view.js')) \nCore.dependencies = {\"client.app\":{\"routes\":{\"players\":\"client.routes.players\"}},\"client.routes.players\":{\"view\":\"client.views.players\"},\"client.views.players\":{\"util\":\"client.utils.view\"}}\nCore.init()\n})()\n//@ sourceURL=/dummy.js"
));
require("/dummy.js");
